[{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","Label":"IPv4 Address","Name":"IpV4AddressType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IPv4 Address","Name":"IpV4Address","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"This data type takes holds information about a formatted string.","Label":"Formatted Text","Name":"FormattedText","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The content type of the request. Currently supports JSON and Text.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Content Type","Name":"ContentType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"JSON","ObjectType":"workflow.EnumEntry","Value":"json"},{"Label":"Text","ObjectType":"workflow.EnumEntry","Value":"text"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The content of the formatted text that can spawn multiple lines.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Text","Name":"Text","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"The types of values that can be extracted from API responses in IO Generic API tasks.","Label":"Response Parameter Type","Name":"ResponseParameterTypeEnum","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The types of values that can be extracted from API responses in IO Generic API tasks. The JSON type can be used to extract any type of value from response as a parameter.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Parameter Type","Name":"ParameterType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"String","ObjectType":"workflow.EnumEntry","Value":"string"},{"Label":"Integer","ObjectType":"workflow.EnumEntry","Value":"integer"},{"Label":"Float","ObjectType":"workflow.EnumEntry","Value":"float"},{"Label":"Boolean","ObjectType":"workflow.EnumEntry","Value":"boolean"},{"Label":"JSON","ObjectType":"workflow.EnumEntry","Value":"json"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"This data type takes information about a parameter that needs to be extracted from an API response in Generic API tasks.","Label":"Response Parameter","Name":"ResponseParameter","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The content specific path information that identifies the parameter value within the content. The value is usually a XPath or JSONPath or a regular expression in case of text content.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Path","Name":"Path","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the response parameter.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Name","Name":"Name","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The response parameter type - will be one of string, integer, float, boolean, complex or collection. If the type is not specified, parameter will be considered of string type by default.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type","Name":"Type","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"ResponseParameterTypeEnum","ObjectType":"workflow.CustomDataProperty"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Response parser framework supports extraction of required values from API/device responses. These responses may be of various content types such as XML, JSON, etc. The values of importance are modeled as parameters in the response parser framework.\nThe parameters can be of a scalar value type or a collection of values. A group of related parameters can be modeled as a single complex type parameter. These complex types will be very useful to extract a set of repeating group of related parameters.\nA response parser specification defines the set of parameters that need to be extracted from the content. The response parser specification allows complex type definitions to be defined for any complex parameters.","Label":"Response Parser","Name":"ResponseParserType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"ResponseParameter","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The collection of parameters that need to be extracted from the API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Parameters","Max":10,"Min":1,"Name":"Parameters","ObjectType":"workflow.ArrayDataType"}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"The outcome type specifies status of the task to be set when the outcome condition evaluates to true.","Label":"Outcome Type Enum","Name":"OutcomeTypeEnum","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The outcome type specifies status of the task to be set when the outcome condition evaluates to true.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Outcome Type","Name":"OutcomeType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Success","ObjectType":"workflow.EnumEntry","Value":"Success"},{"Label":"Error","ObjectType":"workflow.EnumEntry","Value":"Error"},{"Label":"Skip Task Execution","ObjectType":"workflow.EnumEntry","Value":"SkipTaskExecution"},{"Label":"Terminal Error","ObjectType":"workflow.EnumEntry","Value":"TerminalError"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Intersight Orchestrator allows the users to specify the different API outcomes.\nThe task status message for an outcome can be specified. An outcome can be qualified as recoverable/non-recoverable error condition.","Label":"Outcome","Name":"Outcome","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The user friendly name given to the task outcome.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Name","Name":"Name","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The condition expression that uses a golang template logical expression to mark this outcome when the condition evaluates to true for the task execution.\nThe condition can refer outputs extracted via the response parser. The format to refer the captured output is {{.local.response.<captured-parameter-name>}}.\nLets say we have defined 'Name' in the response parser specification and in the condition we want to check if the extracted output 'Name' equals to string value 'Test', condition looks like - {{eq .local.response.Name \"Test\"}}. Make sure to enclose the value within double quotes if it is of string datatype.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Condition","Name":"Condition","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The message to be shown when the outcome specified by condition occurs. Message can have references to the response\nparser captured output.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Message","Name":"Message","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The outcome type based on which task status is updated accordingly. Following outcome types are defined. 1. Success              - Indicates that the outcome is a success and task execution status is marked as 'success'.\n2. Error                - Indicates that the outcome is an error and task execution status is marked as 'failed'.\n3. Skip Task Execution  - Indicates that the task needs to be skipped based on the condition specified and\n                          mark the execution status as 'NO_OP'.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of the outcome","Name":"Type","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"OutcomeTypeEnum","ObjectType":"workflow.CustomDataProperty"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","Label":"Invoke Web API Request","Name":"InvokeGenericWebApi","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"External Target","Name":"Target","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","TargetType"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice or TargetType eq UCSD or TargetType eq RedfishServer or TargetType eq UCSC890) and Status eq Connected))","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["asset.Target"]}]},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"HTTP method to be requested on the given URL. If the value is not given, GET is used as default.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Method","Name":"Method","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"GET","ObjectType":"workflow.EnumEntry","Value":"GET"},{"Label":"HEAD","ObjectType":"workflow.EnumEntry","Value":"HEAD"},{"Label":"POST","ObjectType":"workflow.EnumEntry","Value":"POST"},{"Label":"PUT","ObjectType":"workflow.EnumEntry","Value":"PUT"},{"Label":"PATCH","ObjectType":"workflow.EnumEntry","Value":"PATCH"},{"Label":"DELETE","ObjectType":"workflow.EnumEntry","Value":"DELETE"},{"Label":"OPTIONS","ObjectType":"workflow.EnumEntry","Value":"OPTIONS"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Relative URL for Intersight, Device Registration and Target APIs. Does not support specifying fully qualified URL.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"URL","Name":"Url","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The request headers that need to be sent in the request in key value pairs list.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Headers","Name":"Headers","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The key value pairs given in this input will be sent in HTTP 'Cookie' header.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cookies","Name":"Cookies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The type of the response. Currently supports JSON.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Response Type","Name":"ContentType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"JSON","ObjectType":"workflow.EnumEntry","Value":"json"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The optional request body that is sent as part of this API request. The request body can contain golang templates that can be populated with task input parameters and previous API output parameters.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Body","Name":"Body","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"FormattedText","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The structure of the response parser shall provide the list of values that need to be extracted from the API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Response Parser","Name":"ResponseParser","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"ResponseParserType","ObjectType":"workflow.CustomDataProperty"}},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"Outcome","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Allows to capture the possible outcomes of this API. This is a collection of outcomes which gets evaluated in the order they are given. If an outcome condition evaluates to 'true', status of the task can be set to one of the supported types - Success, Error or no operation and also an optional task execution message can be set.\nAt the end of the outcomes list, a catchall success/fail outcome can be added with condition explicitly set as 'true'. This allows to mark the status of task execution either success or failure when none of the previous outcomes match.\nWhen no outcomes is specified, default behaviour is to mark the API execution status 'success' if obtained HTTP status code is 2xx else mark it as 'failed'.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Outcomes","Max":10,"Name":"Outcomes","ObjectType":"workflow.ArrayDataType"}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The response headers that are extracted from the API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Headers","Name":"Headers","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The list of cookies obtained from the response in the form of key value pairs.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cookies","Name":"Cookies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The HTTP status code of the Web API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Status Code","Name":"StatusCode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The HTTP status message of the Web API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Status Message","Name":"StatusMessage","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The list of output parameters extracted from the response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Parameters","Name":"Parameters","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Executors"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Unclaims the target endpoint from Intersight. When a target is unclaimed, it is immediately detached from the corresponding Intersight account. The target retains any configuration applied before the unclaim operation. You can unclaim any type of target endpoints. ","Label":"Remove Target","Name":"RemoveTarget","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Target to be unclaimed. Supported targets are HTTP EndPoint, SSH EndPoint, Ansible and Powershell EndPoint","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target","Name":"Target","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","TargetType"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/asset/Targets?$select=Name,TargetType ","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":90,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Target Management"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"A DNS name, IPv4 or IPv6 address.\n\nThis type accepts the following values:\n- Host name, e.g. 'my-host123'.\n- Fully-qualified host name, e.g. my-host123.example.com.\n- The host name and domain can contain letters, digits and hyphen.\n- The host name and sub-domains must start with a letter or digit. The top-level domain must start with a letter.\n- The top-level domain must start with a letter.\n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n","Label":"Internet Address Type","Name":"InternetAddressType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"A DNS name, IPv4 or IPv6 address.\n\nThis type accepts the following values:\n- Host name, e.g. 'my-host123'.\n- Fully-qualified host name, e.g. my-host123.example.com.\n- The host name and domain can contain letters, digits and hyphen.\n- The host name and sub-domains must start with a letter or digit. The top-level domain must start with a letter.\n- The top-level domain must start with a letter.\n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Internet Address","Name":"InternetAddress","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^[A-Za-z]([A-Za-z0-9-]*[A-Za-z0-9])?$|^[A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?)*(\\.[A-Za-z]([A-Za-z0-9-]*[A-Za-z0-9])?)$|^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Definition for the supported target types","Label":"Supported Target Types","Name":"SupportedTargetTypes","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Supported Target Types","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Supported Target Types","Name":"SupportedTargetTypes","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"HTTP EndPoint","ObjectType":"workflow.EnumEntry","Value":"HTTPEndpoint"},{"Label":"SSH EndPoint","ObjectType":"workflow.EnumEntry","Value":"SSHEndpoint"},{"Label":"PowerShell EndPoint","ObjectType":"workflow.EnumEntry","Value":"PowerShellEndpoint"},{"Label":"Ansible EndPoint","ObjectType":"workflow.EnumEntry","Value":"AnsibleEndpoint"}],"ObjectType":"workflow.constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Basic Authentication","Label":"Basic Authentication","Name":"BasicAuthentication","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The username used to authenticate with a managed target.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Username","Name":"Username","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The password used to authenticate with a managed target.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Password","Name":"Password","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Authentication Scheme","Label":"Authentication Scheme","Name":"HTTPAuthentication","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"AuthenticationSchemeOptions","EnableParameters":["BasicAuth"],"Name":"AuthenticationSchemeOption1","ObjectType":"workflow.ParameterSet","Value":"Basic"},{"Condition":"eq","ControlParameter":"AuthenticationSchemeOptions","EnableParameters":["Token"],"Name":"AuthenticationSchemeOption2","ObjectType":"workflow.ParameterSet","Value":"Bearer Token"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Authentication scheme options","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication Scheme Options","Name":"AuthenticationSchemeOptions","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Basic","ObjectType":"workflow.EnumEntry","Value":"Basic"},{"Label":"Bearer Token","ObjectType":"workflow.EnumEntry","Value":"Bearer Token"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The user API token from a Terraform user who is in the owners team in Terraform. This is the API token that will be used for the other features.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Token","Name":"Token","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Basic Authentication","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Basic Authentication","Name":"BasicAuth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"BasicAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Key based Authentication","Label":"Key based Authentication","Name":"KeyBasedAuthentication","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The username used to authenticate with a managed target.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Username","Name":"Username","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The private key used to authenticate with a managed target.The corresponding public key needs to be added in the auth list of the remote endpoint.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Private Key","Name":"PrivateKey","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The passphrase associated with the private key - Optional.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Passphrase","Name":"Passphrase","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"SSH Ansible Authentication Scheme","Label":"SSH Ansible Authentication Scheme","Name":"SshAuthentication","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"AuthenticationOptions","EnableParameters":["SABasicAuth"],"Name":"AuthenticationOption1","ObjectType":"workflow.ParameterSet","Value":"Basic"},{"Condition":"eq","ControlParameter":"AuthenticationOptions","EnableParameters":["SAKeyBasedAuth"],"Name":"AuthenticationOption2","ObjectType":"workflow.ParameterSet","Value":"Key Based"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Authentication options for SSH or Ansible","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication Options","Name":"AuthenticationOptions","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Basic","ObjectType":"workflow.EnumEntry","Value":"Basic"},{"Label":"Key Based","ObjectType":"workflow.EnumEntry","Value":"Key Based"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Basic Authentication for SSH or Ansible","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SSH or Ansible Basic Authentication","Name":"SABasicAuth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"BasicAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Key based Authentication for SSH or Ansible","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SSH or Ansible Key Authentication","Name":"SAKeyBasedAuth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"KeyBasedAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Inputs required to claim a new target","Label":"Claim Target Options","Name":"ClaimTargetOptions","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"TargetType","EnableParameters":["ConnectViaAssist","AuthenticationRequired","EnableHTTPSProtocol"],"Name":"ClaimTargetOptions1","ObjectType":"workflow.ParameterSet","Value":"HTTPEndpoint"},{"Condition":"eq","ControlParameter":"TargetType","EnableParameters":["Assist","SAAuth"],"Name":"ClaimTargetOptions2","ObjectType":"workflow.ParameterSet","Value":"SSHEndpoint"},{"Condition":"eq","ControlParameter":"TargetType","EnableParameters":["Assist","Auth"],"Name":"ClaimTargetOptions3","ObjectType":"workflow.ParameterSet","Value":"PowerShellEndpoint"},{"Condition":"eq","ControlParameter":"TargetType","EnableParameters":["Assist","SAAuth"],"Name":"ClaimTargetOptions4","ObjectType":"workflow.ParameterSet","Value":"AnsibleEndpoint"},{"Condition":"eq","ControlParameter":"AuthenticationRequired","EnableParameters":["HTTPAuth"],"Name":"ClaimTargetOptions5","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"ConnectViaAssist","EnableParameters":["Assist"],"Name":"ConnectViaAssistOption1","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Choose the target type to claim a new target","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target Type","Name":"TargetType","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"SupportedTargetTypes","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"HTTP Authentication","Name":"HTTPAuth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HTTPAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"PowerShell Authentication","Name":"Auth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"BasicAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication","Name":"SAAuth","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"SshAuthentication","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Enable if a target is reachable via Intersight Assist only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Connect through an Intersight Assist","Name":"ConnectViaAssist","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Intersight Assist which facilitates management of the target. On premise targets which do not have embedded Intersight Device Connectors must be managed through an Intersight Assist.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Intersight Assist","Name":"Assist","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/asset/Targets?$filter=TargetType eq IntersightAssist","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disable if the endpoint doesn't require any authentication or when the authentication required for the endpoint is not supported in the Authentication Scheme dropdown, in which case respective authentication parameters should be provided in the Web API task inputs.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication Required","Name":"AuthenticationRequired","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Indicates whether a connection to the target should be established using HTTPS.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable HTTPS Protocol","Name":"EnableHTTPSProtocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Claims a new target endpoint in Intersight. The supported target types are HTTP , SSH, Powershell and Ansible endpoint.","Label":"New Target","Name":"NewTarget","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"A user provided name for the managed target","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Name","Name":"Name","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The DNS hostname or IP Address, either IPv4 or IPv6, to be used to connect to the managed target","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hostname or IP Address","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"InternetAddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The port number to be used to connect to the managed target.Valid values are 1 - 65535. If not provided, a default port used to establish the connection to the given target. For HTTP connection, default port used is 443. For SSH/Ansible connection, default port used is 22. For Powershell connection, default port used is 5986.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Port","Name":"Port","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":65535,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Options to claim a new target. Supported targets are HTTP EndPoint, SSH EndPoint, Ansible and Powershell EndPoint","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Claim Target Options","Name":"ClaimTargetOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"ClaimTargetOptions","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Moid of the managed target","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target","Name":"Target","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Moid"],"ObjectType":"workflow.MoReferenceProperty","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":90,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove Target","InputParameters":{"Target":"${task.output.Target}"},"Name":"RemoveTarget","ObjectType":"workflow.RollbackTask","Version":1}],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"category","Value":"Target Management"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Get's a JWT from Red Hat which you can use for 15 minutes","Label":"Get Red Hat JWT","Name":"GetRedHatJWT","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Offline Token","Name":"OFFLINE_TOKEN","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Redhat SSO Endpoint","Name":"Target","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","TargetType"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC or TargetType eq MDSDevice or TargetType eq NexusDevice or TargetType eq UCSD) and Status eq Connected))","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["asset.Target"]}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The list of output parameters extracted from the response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Java Web Token","Name":"JWT","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"}}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"This Workflow will\n1. Create Red Hat and OpenShift Targets\n2. Create an OpenShift cluster in Red Hat's Hybrid Cloud Console and get the custom generated ISO","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"You can get your Token from https://console.redhat.com/openshift/token/show","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Redhat API Token","Name":"OFFLINE_TOKEN","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The name of the Openshift Cluster you want to create","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster name","Name":"CLUSTER_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":54,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-z-]?[a-z-0-9\\-\\.]+[a-z-]?$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The domain name that is used for the Openshift Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Base domain","Name":"DOMAIN_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":3,"ObjectType":"workflow.Constraints","Regex":"^[a-z-]*\\.[a-z-]*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"4.11"},"Description":"The version of OpenShift you would like to install","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"OpenShift version","Name":"VERSION","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"4.12 - Developer Preview Release","ObjectType":"workflow.EnumEntry","Value":"4.12"},{"Label":"4.11","ObjectType":"workflow.EnumEntry","Value":"4.11"},{"Label":"4.10","ObjectType":"workflow.EnumEntry","Value":"4.10"},{"Label":"4.9","ObjectType":"workflow.EnumEntry","Value":"4.9"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Your public key that will be added to the hosts for the 'core' user","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SSH public key","Name":"SSH_PUB_KEY","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Additional NTP servers to use. Leave empty to use default RHCOS internet NTP servers","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NTP servers","Name":"NTP_SERVERS","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"enable this specify static IP, VLAN or bonding. Leave empty for DHCP","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Static IP","Name":"STATIC","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The VLAN ID to use. Leave empty for no VLAN configuration","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VLAN ID","Name":"VLAN_ID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":4096,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":["eth0","eth1"]},"Description":"When creating a bond please add multiple NIC's using the plus sign","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NIC - add 2 or more to create a bond","Max":4,"Min":1,"Name":"NIC","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"active-backup"},"Description":"The mode in which you would like to bond the NICs. Please check here for more details https://docs.openshift.com/container-platform/4.9/networking/k8s_nmstate/k8s-nmstate-updating-node-network-config.html#virt-example-bond-nncp_k8s_nmstate-updating-node-network-config","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Link aggregation mode - only required for bonding","Name":"BOND_MODE","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"active-backup","ObjectType":"workflow.EnumEntry","Value":"active-backup"},{"Label":"balance-xor","ObjectType":"workflow.EnumEntry","Value":"balance-xor"},{"Label":"802.3ad - LACP","ObjectType":"workflow.EnumEntry","Value":"802.3ad"},{"Label":"balance-tlb","ObjectType":"workflow.EnumEntry","Value":"balance-tlb"},{"Label":"balance-alb","ObjectType":"workflow.EnumEntry","Value":"balance-alb"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Length of your network prefix. For example 24","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Network Prefix Length","Name":"PREFIX_LENGTH","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":32,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"DNS Server is used to get the hostnames of your hosts with a reverse IP lookup.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"DNS","Name":"DNS_SERVER","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Your gateway to Valhalla","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Gateway","Name":"GATEWAY","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of IP's to use for the OpenShift servers. Click the plus sign to add more.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IP Addresses","Max":16,"Min":1,"Name":"IPS","ObjectType":"workflow.ArrayDataType","Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"A list of the MAC Addresses of the servers","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"MAC Address List","Max":16,"Min":1,"Name":"MAC_ADDRESS","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The IP Address that will be assigned to the Kubernetes API","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"API IP Address","Name":"API_IP","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The IP Address that will be assigned to the ingress gateway","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Ingress IP Address","Name":"INGRESS_IP","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"10.128.0.0/14"},"Description":"The CIDR used for the POD network","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"POD CIDR","Name":"POD_CIDR","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"172.30.0.0/16"},"Description":"The CIDR used for the service network","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Service CIDR","Name":"SERVICE_CIDR","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Run virtual machines alongside containers on one platform. Additional Requirements      Enabled CPU virtualization support in BIOS (Intel-VT / AMD-V) on all nodes     Each worker node requires an additional 360 MiB of memory and 2 CPUs     Each control plane node requires an additional 150 MiB of memory and 4 CPUs     OpenShift Data Foundation (recommended for full functionality) or another persistent storage service","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Install OpenShift Virtualization","Name":"OSV","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Persistent software-defined storage for hybrid applications. ","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Install OpenShift Data Foundation","Name":"ODF","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"InputParameterSet":[{"Condition":"eq","ControlParameter":"STATIC","EnableParameters":["VLAN_ID","NIC","BOND_MODE","PREFIX_LENGTH","GATEWAY","DNS_SERVER","IPS","MAC_ADDRESS"],"Name":"STATIC","ObjectType":"workflow.ParameterSet","Value":"true"}],"Label":"Create OpenShift Cluster","Name":"CreateOpenshiftBMCluster","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The URL to the ISO provided by Red Hat","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"ISO_URL","Name":"ISO_URL","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The ID of the Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster ID","Name":"CLUSTER_ID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"OutputParameters":{"CLUSTER_ID":"${createOpenshiftCluster.output.Parameters.CLUSTER_ID}","ISO_URL":"${InvokeGenericWebApi1.output.Parameters.ISO_URL}"},"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"RHTarget","ObjectType":"workflow.StartTask"},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.'h","InputParameters":{"ContentType":"json","Headers":{"Accept":"application/json, text/plain, */*"},"Method":"POST","ResponseParser":{"Parameters":[{"Name":"RH_TOKEN","Path":"$","Type":"json"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/accounts_mgmt/v1/access_token"},"Label":"Get Access Tokens","Name":"getAccessTokens","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"createOpenshiftCluster","TaskDefinitionName":"InvokeGenericWebApi","VariableParameters":{},"Version":2},{"CatalogMoid":"shared","Description":"Unclaims the target endpoint from Intersight. When a target is unclaimed, it is immediately detached from the corresponding Intersight account. The target retains any configuration applied before the unclaim operation. You can unclaim any type of target endpoints. ","InputParameters":{"Target":"${OpenshiftTarget.output.Target}"},"Label":"Remove Openshift API Target","Name":"removeOpenshiftTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"removeRHTarget","TaskDefinitionName":"RemoveTarget","Version":1},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","InputParameters":{"Body":{"ContentType":"text","Text":"{\n  \"name\": \"{{.global.workflow.input.CLUSTER_NAME}}\",\n  \"high_availability_mode\": \"Full\",\n  \"openshift_version\": \"{{.global.workflow.input.VERSION}}\",\n  \"pull_secret\": \"{{.global.getAccessTokens.output.Parameters.RH_TOKEN | ToJson | js | js}}\",\n  \"base_dns_domain\": \"{{.global.workflow.input.DOMAIN_NAME}}\",\n  \"cpu_architecture\": \"x86_64\",\n  \"disk_encryption\": {\n    \"mode\": \"tpmv2\",\n    \"enable_on\": \"none\"\n  },\n  \"network_type\": \"OpenShiftSDN\",\n  \"api_vip\": \"{{.global.workflow.input.API_IP}}\",\n  \"ingress_vip\": \"{{.global.workflow.input.INGRESS_IP}}\",\n  \"ssh_public_key\": \"{{.global.workflow.input.SSH_PUB_KEY}}\",\n  \"vip_dhcp_allocation\": false,\n{{- if .global.workflow.input.STATIC }}\n  \"machine_networks\": [{ \"cidr\": \"{{.global.workflow.input.GATEWAY}}/{{.global.workflow.input.PREFIX_LENGTH }}\" }],\n{{- end}}\n  \"cluster_networks\": [{ \"cidr\": \"{{.global.workflow.input.POD_CIDR}}\", \"host_prefix\": 23 }],\n  \"service_networks\": [{ \"cidr\": \"{{.global.workflow.input.SERVICE_CIDR}}\" }],\n  \"olm_operators\":[{{ if .global.workflow.input.OSV }}{\"name\":\"cnv\"}{{end}}{{ if and .global.workflow.input.ODF .global.workflow.input.OSV }},{{end}}{{if .global.workflow.input.ODF }}{\"name\":\"ocs\"}{{end}}]\n}"},"ContentType":"json","Headers":{"Content-Type":"application/json","accept":"application/json"},"Method":"POST","ResponseParser":{"Parameters":[{"Name":"CLUSTER_ID","Path":"$.id","Type":"string"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/assisted-install/v2/clusters/"},"Label":"Create Openshift Cluster","Name":"createOpenshiftCluster","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"createInfraEnv","TaskDefinitionName":"InvokeGenericWebApi","Version":2},{"CatalogMoid":"shared","Description":"Claims a new target endpoint in Intersight. The supported target types are HTTP , SSH, Powershell and Ansible endpoint.","InputParameters":{"ClaimTargetOptions":{"AuthenticationRequired":false,"ConnectViaAssist":false,"EnableHTTPSProtocol":true,"TargetType":"HTTPEndpoint"},"Host":"sso.redhat.com","Name":"Redhat SSO","Port":443},"Label":"Add Redhat SSO Target","Name":"RHTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"GetRedHatJWT1","TaskDefinitionName":"NewTarget","Version":1},{"CatalogMoid":"shared","Description":"Unclaims the target endpoint from Intersight. When a target is unclaimed, it is immediately detached from the corresponding Intersight account. The target retains any configuration applied before the unclaim operation. You can unclaim any type of target endpoints. ","InputParameters":{"Target":"${RHTarget.output.Target}"},"Label":"Remove Redhat SSO Target","Name":"removeRHTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"RemoveTarget","Version":1},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","InputParameters":{"Body":{"ContentType":"text","Text":"{\n\t\"name\": \"{{.global.workflow.input.CLUSTER_NAME}}_infra-env\",\n\t\"pull_secret\": \"{{.global.getAccessTokens.output.Parameters.RH_TOKEN | ToJson | js | js}}\",\n\t\"cluster_id\": \"{{.global.createOpenshiftCluster.output.Parameters.CLUSTER_ID}}\",\n\t\"ssh_authorized_key\": \"{{.global.workflow.input.SSH_PUB_KEY}}\",\n\t\"image_type\": \"minimal-iso\",\n\t\"openshift_version\": \"4.11\",\n\t\"cpu_architecture\": \"x86_64\"{{- if .global.workflow.input.NTP_SERVERS}},\n\t\"additional_ntp_sources\": \"{{.global.workflow.input.NTP_SERVERS }}\"{{- end}}\n\t{{- if .global.workflow.input.STATIC}},\n\t\"static_network_config\": [\n\t{{- $NAME := (index .global.workflow.input.NIC 0) }}\n\t{{- $TYPE := `ethernet` }}\n\t{{- if ge (len .global.workflow.input.NIC) 2 -}}\n\t\t{{- $NAME = `bond0` -}}\n\t\t{{- $TYPE = `bond` -}}\n\t{{- else -}}\n\t\t{{- $NAME = (index .global.workflow.input.NIC 0) -}}\n\t\t{{- $TYPE = `ethernet` -}}\n\t{{- end -}}\n\t{{- $INPUT := .global.workflow.input }}\n\t{{- range $index, $mac := .global.workflow.input.MAC_ADDRESS}}\n\t{{- if $index}},{{end}}\n\t{\n\t\t\"network_yaml\": \"#Generated by Intersight\\ninterfaces:\\n  - name: {{ $NAME }}\\n    type: {{ $TYPE }}\\n    state: up\\n{{- if eq $TYPE `bond` }}    link-aggregation:\\n      mode: {{ $INPUT.BOND_MODE }}\\n      options:\\n        miimon: '140'\\n      port:\\n  {{- range $port := $INPUT.NIC }}      - {{ $port }}\\n {{- end}}{{- end}}{{- if $INPUT.VLAN_ID}}  - name: {{ $NAME }}.{{$INPUT.VLAN_ID}}\\n    type: vlan\\n    state: up\\n    vlan:\\n      base-iface: {{$NAME}}\\n      id: {{$INPUT.VLAN_ID}}\\n{{- end}}    ipv4:\\n      address:\\n        - ip: {{index $INPUT.IPS $index}}\\n          prefix-length: {{$INPUT.PREFIX_LENGTH}}\\n      enabled: true\\n      dhcp: false\\ndns-resolver:\\n  config:\\n    server:\\n      - {{$INPUT.DNS_SERVER}}\\nroutes:\\n  config:\\n    - destination: 0.0.0.0/0\\n      next-hop-address: {{$INPUT.GATEWAY}}\\n      next-hop-interface: {{$NAME}}{{if $INPUT.VLAN_ID}}.{{$INPUT.VLAN_ID}}{{end}}\\n      table-id: 254\\n\",\n\t\t\"mac_interface_map\": [\n\t\t{\n\t\t\t\"mac_address\": \"{{$mac}}\",\n\t\t\t\"logical_nic_name\": \"{{$NAME}}\"\n\t\t}\n\t\t]\n\t}\n\t{{end}}\n\t]\n\t{{end}}\n}"},"ContentType":"json","Headers":{"Content-Type":"application/json","accept":"application/json"},"Method":"POST","ResponseParser":{"Parameters":[{"Name":"INFRA_ENV_ID","Path":"$.id","Type":"string"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/assisted-install/v2/infra-envs/"},"Label":"Create Infra Environment","Name":"createInfraEnv","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"InvokeGenericWebApi1","TaskDefinitionName":"InvokeGenericWebApi","Version":2},{"CatalogMoid":"user","Description":"Get's a JWT from Red Hat which you can use for 15 minutes","InputParameters":{"OFFLINE_TOKEN":"${workflow.input.OFFLINE_TOKEN}","Target":"${RHTarget.output.Target}"},"Label":"Get Red Hat Token","Name":"GetRedHatJWT1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"OpenshiftTarget","TaskDefinitionName":"GetRedHatJWT","Version":1},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","InputParameters":{"Method":"GET","ResponseParser":{"Parameters":[{"Name":"ISO_URL","Path":"$.download_url","Type":"string"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/assisted-install/v2/infra-envs/{{.global.createInfraEnv.output.Parameters.INFRA_ENV_ID}}"},"Label":"Get ISO URL","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"removeOpenshiftTarget","TaskDefinitionName":"InvokeGenericWebApi","Version":2},{"CatalogMoid":"shared","Description":"Claims a new target endpoint in Intersight. The supported target types are HTTP , SSH, Powershell and Ansible endpoint.","InputParameters":{"ClaimTargetOptions":{"AuthenticationRequired":true,"ConnectViaAssist":false,"EnableHTTPSProtocol":true,"HTTPAuth":{"AuthenticationSchemeOptions":"Bearer Token","IsTokenSet":true,"Token":"{{ .global.GetRedHatJWT1.output.JWT }}"},"TargetType":"HTTPEndpoint"},"Host":"api.openshift.com","Name":"Openshift API","Port":443},"Label":"Add Openshift API Target","Name":"OpenshiftTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"getAccessTokens","TaskDefinitionName":"NewTarget","Version":1},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":178.99724518747269,"Y":176.19129285594187},{"Name":"SuccessEndTask","X":914.0911848894373,"Y":448.07996554800275},{"Name":"FailureEndTask","X":553.0228108778879,"Y":524.4711673186232},{"Name":"RHTarget","X":93.63042147131455,"Y":266.80258959218764},{"Name":"removeRHTarget","X":830.1614326411625,"Y":328.5280082289475},{"Name":"removeOpenshiftTarget","X":831.1675883914065,"Y":251.63280543748277},{"Name":"OpenshiftTarget","X":91.50030674415791,"Y":415.5},{"Name":"getAccessTokens","X":445.8559791080572,"Y":192.04037402955575},{"Name":"createOpenshiftCluster","X":446.0271136326817,"Y":265.2870754996965},{"Name":"createInfraEnv","X":445.5,"Y":336.5},{"Name":"InvokeGenericWebApi1","X":446.02711363268213,"Y":408.2091487973332},{"Name":"GetRedHatJWT1","X":92.12123261930367,"Y":346.5}]},"VariableDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Value":"api.openshift.com"},"Description":"Relative URL for Intersight, Device Registration and Target APIs. Does not support specifying fully qualified URL.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"openshift_api","Name":"openshift_api","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time. If no device is chosen, It clears the one time boot configuration.","Label":"Set Server One Time Boot Device","Name":"SetServerOneTimeBootDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode","PlatformType"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter='ManagementMode' eq 'IntersightStandalone'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"One time boot device configuration will be cleared.","InputParameters":{"Server":"${task.input.Server}"},"Name":"SetServerOneTimeBootDevice","ObjectType":"workflow.RollbackTask","Version":2}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Server target device","Label":"Server Target Datatype","Name":"ServerTargetDataType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"CustomDataTypeProperties":{"ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server target device","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode","PlatformType"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter= ManagementMode in ('IntersightStandalone','Intersight') and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","Label":"Set Server Power State","Name":"SetServerPowerState","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"ServerTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Desired Power State","Name":"PowerState","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Power On","ObjectType":"workflow.EnumEntry","Value":"Power On"},{"Label":"Power Off","ObjectType":"workflow.EnumEntry","Value":"Power Off"},{"Label":"Power Cycle","ObjectType":"workflow.EnumEntry","Value":"Power Cycle"},{"Label":"Hard Reset","ObjectType":"workflow.EnumEntry","Value":"Hard Reset"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Workflow Triggered","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Workflow Triggered","Name":"Workflow","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]}],"RetryCount":10,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Deploys the selected server profile on the server\nOn successful execution, the Deploy Server Profile workflow will be triggered.\n","Label":"Deploy Server Profile","Name":"DeployServerProfile","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server Profile specifying configuration settings for a physical server","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile","Name":"Profile","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/Profiles?$filter=AssignedServer ne null","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Workflow Triggered","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Workflow Triggered","Name":"Workflow","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]}],"RetryCount":5,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":180,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Get the Profile which is associated with the server","Label":"Get Server Profile from Server","Name":"GetServerProfilefromServer","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"ServerProfileMoids","Max":9999,"Name":"ServerProfileMoids","ObjectType":"workflow.ArrayDataType"}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Deploy the Server Profile, Configure the one time Boot Device and Power Cycle","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Override":true},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter='ManagementMode' eq 'IntersightStandalone'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"CIMC-DVD"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"Power Cycle"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Desired Power State","Name":"PowerState","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Power On","ObjectType":"workflow.EnumEntry","Value":"Power On"},{"Label":"Power Off","ObjectType":"workflow.EnumEntry","Value":"Power Off"},{"Label":"Power Cycle","ObjectType":"workflow.EnumEntry","Value":"Power Cycle"},{"Label":"Hard Reset","ObjectType":"workflow.EnumEntry","Value":"Hard Reset"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}],"InputParameterSet":[],"Label":"Boot Server from vMedia","Name":"BootServerfromvMedia","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"GetServerProfilefromServer1","ObjectType":"workflow.StartTask"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"shared","Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time. If no device is chosen, It clears the one time boot configuration.","InputParameters":{"OneTimeBootDevice":"${workflow.input.OneTimeBootDevice}","Server":"${workflow.input.Server}"},"Label":"Set Server One Time Boot Device","Name":"SetServerOneTimeBootDevice1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SetServerPowerState1","TaskDefinitionName":"SetServerOneTimeBootDevice","Version":2},{"CatalogMoid":"shared","Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","InputParameters":{"PowerState":"${workflow.input.PowerState}","Server":"${workflow.input.Server}"},"Label":"Set Server Power State","Name":"SetServerPowerState1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"SetServerPowerState","Version":2},{"CatalogMoid":"shared","Description":"Deploys the selected server profile on the server\nOn successful execution, the Deploy Server Profile workflow will be triggered.\n","InputParameters":{"Profile":{"Moid":"{{ index .global.GetServerProfilefromServer1.output.ServerProfileMoids 0}}","ObjectType":"server.Profile"}},"Label":"Deploy Server Profile","Name":"DeployServerProfile1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SetServerOneTimeBootDevice1","TaskDefinitionName":"DeployServerProfile","Version":1},{"CatalogMoid":"user","Description":"Get the Profile which is associated with the server","InputParameters":{"Server":"${workflow.input.Server}"},"Label":"Get Server Profile from Server","Name":"GetServerProfilefromServer1","ObjectType":"workflow.WorkerTask","OnSuccess":"DeployServerProfile1","TaskDefinitionName":"GetServerProfilefromServer","Version":1}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":263.5,"Y":80},{"Name":"SuccessEndTask","X":263.5,"Y":553.3333282470703},{"Name":"FailureEndTask","X":406.5,"Y":553.3333282470703},{"Name":"SetServerOneTimeBootDevice1","X":178.5,"Y":355.16666412353516},{"Name":"SetServerPowerState1","X":178.5,"Y":454.24999618530273},{"Name":"DeployServerProfile1","X":178.5,"Y":256.0833320617676},{"Name":"GetServerProfilefromServer1","X":178.5,"Y":157}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Deletes server profile given by user. A profile can not be deleted when a server is assigned to it unless it is incomplete.","Label":"Remove Server Profile","Name":"RemoveServerProfile","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server Profile specifying configuration settings for a physical server.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile","Name":"Profile","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/Profiles","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Creates a server profile from the selected template and adds the associated policies to the server profile.\nIf the 'Target Profile Name' is provided, it will be considered as the name of the profile to be created. The task will fail, if the profile name already exists.\nIf the 'Target Profile Name' is not provided, the name of the profile is generated from the 'Target Profile Name Prefix' and 'Target Profile Name Suffix' inputs.\n","Label":"New Server Profile from Template","Name":"NewServerProfileFromTemplate","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server Profile template specifying configuration settings for a physical server","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Source Profile Template","Name":"SourceProfileTemplate","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/ProfileTemplates","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the Target Server Profile.\nIf the name is provided in the input and if a profile with the same name exists, then this task fails.\nIf the name is not provided, the target prefix and suffix is used to identify the available profile name.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target Profile Name","Name":"TargetProfileName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9_.-]{1,64}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Prefix to be used for name of the profile.\nIf not provided, \"&lt;SourceProfileTemplateName&gt;_DERIVED-\" will be used as prefix. This value is appended with an auto incremented number to identify the available profile name.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target Profile Name Prefix","Name":"TargetProfileNamePrefix","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9_.-]{1,64}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Suffix to be used for name of the profile.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target Profile Name Suffix","Name":"TargetProfileNameSuffix","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9_.-]{1,64}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Detailed description for the Target Server Profile.\nIf not provided, description of the template will be used.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Target Profile Description","Name":"TargetProfileDescription","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":1024,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9]+[\\sa-zA-Z0-9_'.:-]*$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Created Server Profile","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile","Name":"Profile","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/Profiles","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Timeout"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Deletes the created server profile.","InputParameters":{"Profile":"${task.output.Profile}"},"Name":"RemoveServerProfile","ObjectType":"workflow.RollbackTask","Version":1}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Unassigns server from server profile with profile Moref as input.\nOn successful execution, profile status will be the output.\n","Label":"Remove Server from Server Profile","Name":"RemoveServerFromServerProfile","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server Profile specifying configuration settings for a physical server","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile","Name":"Profile","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/Profiles","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile Status","Name":"ProfileStatus","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Sets server to server profile with server and profile as inputs.\nIf the selected server is already part of another profile or if the selected profile has a different server previously assigned to it, then an error is displayed.\nOn successful execution, the profile status will be provided as output.","Label":"Set Server to Server Profile","Name":"SetServerToServerProfile","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server Profile specifying configuration settings for a physical server","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile","Name":"Profile","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/Profiles","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server to which the profile needs to be assigned","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone','Intersight')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Profile Status","Name":"ProfileStatus","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Unassigns server from server profile","InputParameters":{"Profile":"${task.input.Profile}"},"Name":"RemoveServerFromServerProfile","ObjectType":"workflow.RollbackTask","Version":1}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"1. Create a new Server Profile from Template\n2. Set a server to the newly created Server Profile\n3. Deploy the Server Profile","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select the Server Profile Template you would like to use","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Template","Name":"SPT","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","Description","TargetPlatform"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/ProfileTemplates","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server to deploy the Profile Template to","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"SERVER","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","Model","Serial","ManagementMode","Firmware","MgmtIpAddress"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Name of the Server Profile to create","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Name","Name":"SP_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Name of the NIC you want the MAC address of","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NIC Name","Name":"NIC_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"InputParameterSet":[],"Label":"Create and Deploy Server Profile","Name":"CreateandDeployServerProfile","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"OutputParameters":{},"Properties":{"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"NewServerProfileFromTemplate1","ObjectType":"workflow.StartTask"},{"CatalogMoid":"shared","Description":"Creates a server profile from the selected template and adds the associated policies to the server profile.\nIf the 'Target Profile Name' is provided, it will be considered as the name of the profile to be created. The task will fail, if the profile name already exists.\nIf the 'Target Profile Name' is not provided, the name of the profile is generated from the 'Target Profile Name Prefix' and 'Target Profile Name Suffix' inputs.\n","InputParameters":{"SourceProfileTemplate":"${workflow.input.SPT}","TargetProfileName":"${workflow.input.SP_NAME}"},"Label":"New Server Profile from Template","Name":"NewServerProfileFromTemplate1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SetServerToServerProfile1","TaskDefinitionName":"NewServerProfileFromTemplate","Version":1},{"CatalogMoid":"shared","Description":"Sets server to server profile with server and profile as inputs.\nIf the selected server is already part of another profile or if the selected profile has a different server previously assigned to it, then an error is displayed.\nOn successful execution, the profile status will be provided as output.","InputParameters":{"Profile":"${NewServerProfileFromTemplate1.output.Profile}","Server":"${workflow.input.SERVER}"},"Label":"Set Server to Server Profile","Name":"SetServerToServerProfile1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"DeployServerProfile1","TaskDefinitionName":"SetServerToServerProfile","Version":1},{"CatalogMoid":"shared","Description":"Deploys the selected server profile on the server\nOn successful execution, the Deploy Server Profile workflow will be triggered.\n","InputParameters":{"Profile":"${NewServerProfileFromTemplate1.output.Profile}"},"Label":"Deploy Server Profile","Name":"DeployServerProfile1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"DeployServerProfile","Version":1},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":263.5,"Y":75},{"Name":"SuccessEndTask","X":263.5,"Y":509},{"Name":"FailureEndTask","X":405.5,"Y":510},{"Name":"NewServerProfileFromTemplate1","X":178.5,"Y":146},{"Name":"SetServerToServerProfile1","X":178.5,"Y":234},{"Name":"DeployServerProfile1","X":178.5,"Y":322}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a Virtual Media Policy that will mount an HTTP(s) URL on the CIMC","Label":"Create HTTP Virtual Media Policy","Name":"CreateHTTPVirtualMediaPolicy","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Policy Name","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Name","Name":"Name","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Name of the Volume to be mounted","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"HTTP or HTTPS","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Protocol","Name":"Protocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The URL to your ISO","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"URL","Name":"URL","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Moid","Name":"Moid","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Get Profiles attached to a Template","Label":"Get Server Profiles attached to Template","Name":"GetServerProfilesattachedtoTemplate","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The server profile template that needs to be synced.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Template","Name":"SPT","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/ProfileTemplates","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of the Server Profile Moid's which are attached to the Server Profile Template","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Moids","Max":9999,"Min":1,"Name":"ServerProfileMoids","ObjectType":"workflow.ArrayDataType"}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This task will add your Policy to a Server Profile Template Policy Bucket and will do it for all the attached profiles","Label":"Add Policy to Server Profile","Name":"AddPolicytoServerProfile","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Moid of the Server Profile you want to add a Policy too","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Moid","Name":"SP","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Policy you would like to add to the Server Profile Template","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Policy MoId","Name":"PolicyMoId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The ObjectType of the Policy","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Policy Type","Name":"PolicyType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Create a Virtual Media Policy and attach it to your Server Profiles.\n\n1. Create Virtual Media Policy\n2. Attach the Policy to the Template\n3. Sync the Template with the Profiles","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"8bde4ee5-a6a9-4698-bb17-88a6fb6f5b42-discovery.iso"},"Description":"The name of the ISO file","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"ISO","Name":"ISO","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"ico-test"},"Description":"Name of the OpenShift Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster Name","Name":"ClusterName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true},"Description":"The Server Profile Template you would like to add a Policy too","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Template","Name":"SPT","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/ProfileTemplates","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true}],"InputParameterSet":[],"Label":"Create vMedia Policy and attach to Server Profile","Name":"createVmediaPolicyAndAttachToServerProfiles","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"CreateHTTPVirtualMediaPolicy1","ObjectType":"workflow.StartTask"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"user","Description":"Create a Virtual Media Policy that will mount an HTTP(s) URL on the CIMC","InputParameters":{"Name":"{{ .global.workflow.input.ClusterName}}-discovery","Protocol":"http","URL":"http://ec2-3-131-159-111.us-east-2.compute.amazonaws.com/files/{{ .global.workflow.input.ISO }}","VolumeName":"OpenShift-discovery"},"Label":"Create HTTP Virtual Media Policy","Name":"CreateHTTPVirtualMediaPolicy1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"GetServerProfilesattachedtoTemplate1","TaskDefinitionName":"CreateHTTPVirtualMediaPolicy","Version":1},{"CatalogMoid":"user","Description":"Get Profiles attached to a Template","InputParameters":{"SPT":"${workflow.input.SPT}"},"Label":"Get Server Profiles attached to Template","Name":"GetServerProfilesattachedtoTemplate1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"serialLoop1","TaskDefinitionName":"GetServerProfilesattachedtoTemplate","Version":1},{"Count":"{{ len .global.GetServerProfilesattachedtoTemplate1.output.ServerProfileMoids }}","Description":"A Serial Loop is a control task that runs one or more worker tasks multiple times based on a specified count or a given condition.  Either count or condition must be provided, not both.  When the loop is executed, based on count or condition, each iteration of task or a sequence of tasks inside loop run in serial.  If any of the task fail then the entire loop will fail.","Label":"Serial Loop","LoopStartTask":"AddPolicytoServerProfile1","Name":"serialLoop1","ObjectType":"workflow.SerialLoopTask","OnSuccess":"SuccessEndTask"},{"CatalogMoid":"user","Description":"This task will add your Policy to a Server Profile Template Policy Bucket and will do it for all the attached profiles","InputParameters":{"PolicyMoId":"${CreateHTTPVirtualMediaPolicy1.output.Moid}","PolicyType":"vmedia.Policy","SP":"{{ index .global.GetServerProfilesattachedtoTemplate1.output.ServerProfileMoids .iteration }}"},"Label":"Add Policy to Server Profile","Name":"AddPolicytoServerProfile1","ObjectType":"workflow.WorkerTask","TaskDefinitionName":"AddPolicytoServerProfile","Version":1}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":273.5,"Y":87.5},{"Name":"SuccessEndTask","X":273.5,"Y":570},{"Name":"FailureEndTask","X":415.5,"Y":570},{"Name":"CreateHTTPVirtualMediaPolicy1","X":188.5,"Y":171},{"Name":"GetServerProfilesattachedtoTemplate1","X":188.5,"Y":270},{"Name":"serialLoop1","X":178.5,"Y":369},{"Name":"AddPolicytoServerProfile1","X":188.5,"Y":460}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Pauses the current workflow for the specified duration.","Label":"Sleep Task","Name":"InvokeSleepTask","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Sleep Time in Seconds","Name":"SleepTimeInSec","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":600,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"CoreTasks"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"This Workflow will\n1. Validate if your cluster is ready for install \n2. Start the OpenShift installation","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhZDUyMjdhMy1iY2ZkLTRjZjAtYTdiNi0zOTk4MzVhMDg1NjYifQ.eyJpYXQiOjE2NjQ4NTUyNDcsImp0aSI6IjQyYzg4ZDIwLWFlMDktNDMwNi05YzJkLWFiNjlmM2YwNjljYSIsImlzcyI6Imh0dHBzOi8vc3NvLnJlZGhhdC5jb20vYXV0aC9yZWFsbXMvcmVkaGF0LWV4dGVybmFsIiwiYXVkIjoiaHR0cHM6Ly9zc28ucmVkaGF0LmNvbS9hdXRoL3JlYWxtcy9yZWRoYXQtZXh0ZXJuYWwiLCJzdWIiOiJmOjUyOGQ3NmZmLWY3MDgtNDNlZC04Y2Q1LWZlMTZmNGZlMGNlNjpib3Jpcy5hZWxlbiIsInR5cCI6Ik9mZmxpbmUiLCJhenAiOiJjbG91ZC1zZXJ2aWNlcyIsIm5vbmNlIjoiNGE1NjMzNWUtZGFmOC00MzY3LTgzYjQtNTQxMjc0ODU2ZjdlIiwic2Vzc2lvbl9zdGF0ZSI6ImI2OWVlYjdlLTBkYzQtNDM1OC1iMDk3LTQyY2NiMWQ4ZWZlMyIsInNjb3BlIjoib3BlbmlkIGFwaS5pYW0uc2VydmljZV9hY2NvdW50cyBvZmZsaW5lX2FjY2VzcyIsInNpZCI6ImI2OWVlYjdlLTBkYzQtNDM1OC1iMDk3LTQyY2NiMWQ4ZWZlMyJ9.gr-gTfybvVHyCF4B1uNHrWhm_zy4Ahx3zOXmPnFPqus"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Redhat API Token","Name":"OFFLINE_TOKEN","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"228d9eb7-437a-4685-a67f-b19b9b14b861"},"Description":"The ID of the OpenShift Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster ID","Name":"CLUSTER_ID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"InputParameterSet":[],"Label":"Install OpenShift Cluster","Name":"InstallOpenShiftCluster","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"OutputParameters":{},"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"RHTarget","ObjectType":"workflow.StartTask"},{"CatalogMoid":"shared","Description":"Claims a new target endpoint in Intersight. The supported target types are HTTP , SSH, Powershell and Ansible endpoint.","InputParameters":{"ClaimTargetOptions":{"AuthenticationRequired":false,"ConnectViaAssist":false,"EnableHTTPSProtocol":true,"TargetType":"HTTPEndpoint"},"Host":"sso.redhat.com","Name":"Redhat SSO","Port":443},"Label":"Add Redhat SSO Target","Name":"RHTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"OpenshiftTarget","TaskDefinitionName":"NewTarget","Version":1},{"CatalogMoid":"shared","Description":"Claims a new target endpoint in Intersight. The supported target types are HTTP , SSH, Powershell and Ansible endpoint.","InputParameters":{"ClaimTargetOptions":{"AuthenticationRequired":false,"ConnectViaAssist":false,"EnableHTTPSProtocol":true,"TargetType":"HTTPEndpoint"},"Host":"api.openshift.com","Name":"Openshift API","Port":443},"Label":"Add Openshift API Target","Name":"OpenshiftTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"serialLoop1","TaskDefinitionName":"NewTarget","Version":1},{"Condition":"if (${getClusterStatus2.output.Parameters.ClusterStatus} === \"ready\") { false; } else { true; } ","Description":"A Serial Loop is a control task that runs one or more worker tasks multiple times based on a specified count or a given condition.  Either count or condition must be provided, not both.  When the loop is executed, based on count or condition, each iteration of task or a sequence of tasks inside loop run in serial.  If any of the task fail then the entire loop will fail.","Label":"Check cluster readiness","LoopStartTask":"InvokeSleepTask1","Name":"serialLoop1","ObjectType":"workflow.SerialLoopTask","OnSuccess":"GetRedHatJWT1"},{"CatalogMoid":"user","Description":"Get's a JWT from Red Hat which you can use for 15 minutes","InputParameters":{"OFFLINE_TOKEN":"${workflow.input.OFFLINE_TOKEN}","Target":"${RHTarget.output.Target}"},"Label":"Get Red Hat JWT","Name":"GetRedHatJWT2","ObjectType":"workflow.WorkerTask","OnSuccess":"getClusterStatus2","TaskDefinitionName":"GetRedHatJWT","Version":1},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","InputParameters":{"ContentType":"json","Headers":{"Authorization":"Bearer {{ .global.GetRedHatJWT2.output.JWT }}","Content-Type":"application/json","accept":"application/json"},"Method":"GET","ResponseParser":{"Parameters":[{"Name":"ClusterStatus","Path":"$.status","Type":"string"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/assisted-install/v2/clusters/{{ .global.workflow.input.CLUSTER_ID }}"},"Label":"Get Cluster Status","Name":"getClusterStatus2","ObjectType":"workflow.WorkerTask","TaskDefinitionName":"InvokeGenericWebApi","VariableParameters":{"ClusterStatus":"${getClusterStatus2.output.Parameters.ClusterStatus}"},"Version":2},{"CatalogMoid":"shared","InputParameters":{"ContentType":"json","Headers":{"Authorization":"Bearer {{ .global.GetRedHatJWT1.output.JWT }}","Content-Type":"application/json","accept":"application/json"},"Method":"POST","ResponseParser":{"Parameters":[{"Name":"Response","Path":"$","Type":"json"}]},"Target":"${OpenshiftTarget.output.Target}","Url":"/api/assisted-install/v2/clusters/{{ .global.workflow.input.CLUSTER_ID }}/actions/install"},"Label":"Install OpenShift Cluster","Name":"installOpenshiftCluster","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"removeOpenshiftTarget","TaskDefinitionName":"InvokeGenericWebApi","Version":2},{"CatalogMoid":"shared","Description":"Unclaims the target endpoint from Intersight. When a target is unclaimed, it is immediately detached from the corresponding Intersight account. The target retains any configuration applied before the unclaim operation. You can unclaim any type of target endpoints. ","InputParameters":{"Target":"${RHTarget.output.Target}"},"Label":"Remove Redhat SSO Target","Name":"removeRHTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"RemoveTarget","Version":1},{"CatalogMoid":"shared","Description":"Unclaims the target endpoint from Intersight. When a target is unclaimed, it is immediately detached from the corresponding Intersight account. The target retains any configuration applied before the unclaim operation. You can unclaim any type of target endpoints. ","InputParameters":{"Target":"${OpenshiftTarget.output.Target}"},"Label":"Remove Openshift API Target","Name":"removeOpenshiftTarget","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"removeRHTarget","TaskDefinitionName":"RemoveTarget","Version":1},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"user","Description":"Get's a JWT from Red Hat which you can use for 15 minutes","InputParameters":{"OFFLINE_TOKEN":"${workflow.input.OFFLINE_TOKEN}","Target":"${RHTarget.output.Target}"},"Label":"Get Red Hat JWT 2","Name":"GetRedHatJWT1","ObjectType":"workflow.WorkerTask","OnSuccess":"installOpenshiftCluster","TaskDefinitionName":"GetRedHatJWT","Version":1},{"CatalogMoid":"shared","Description":"Pauses the current workflow for the specified duration.","InputParameters":{"SleepTimeInSec":60},"Label":"Sleep Task","Name":"InvokeSleepTask1","ObjectType":"workflow.WorkerTask","OnSuccess":"GetRedHatJWT2","TaskDefinitionName":"InvokeSleepTask","Version":1}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":313.5,"Y":-119.5},{"Name":"SuccessEndTask","X":313.5,"Y":869},{"Name":"FailureEndTask","X":455.5,"Y":869},{"Name":"RHTarget","X":228.5,"Y":-30.5},{"Name":"removeRHTarget","X":228.5,"Y":781},{"Name":"removeOpenshiftTarget","X":228.5,"Y":693},{"Name":"OpenshiftTarget","X":228.5,"Y":63},{"Name":"installOpenshiftCluster","X":228.5,"Y":605},{"Name":"serialLoop1","X":218.5,"Y":162},{"Name":"getClusterStatus","X":189.5,"Y":308},{"Name":"GetRedHatJWT2","X":228.5,"Y":330},{"Name":"getClusterStatus2","X":228.5,"Y":407},{"Name":"GetRedHatJWT1","X":228.5,"Y":517},{"Name":"InvokeSleepTask1","X":228.5,"Y":253}]},"VariableDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Value":"api.openshift.com"},"Description":"Relative URL for Intersight, Device Registration and Target APIs. Does not support specifying fully qualified URL.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"openshift_api","Name":"openshift_api","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Value":"pending"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"ClusterStatus","Name":"ClusterStatus","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Get the MAC address for one or multiple servers for a specific NIC","Label":"Get MAC Address","Name":"GetMACAddress","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"ArrayItemType":{"ObjectType":"workflow.MoReferenceArrayItem","Properties":[{"DisplayAttributes":["Name","Model"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Servers","Max":16,"Min":1,"Name":"SERVERS","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The Name of the NIC you want the MAC address of","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NIC Name","Name":"NIC_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"something like \"L\" or \"MLOM\"","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Adapter ID Name","Name":"AdapterID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The MAC Address of the server.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"MAC Adress","Max":16,"Min":1,"Name":"MAC_ADDRESS","ObjectType":"workflow.ArrayDataType"}],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Do a complete deployment of a Red Hat OpenShift bare metal cluster. \nThis Workflow will\n1. Create Server Profiles from a Template and Assign to the servers you specified.\n2. Create an OpenShift cluster in Red Hat's Hybrid Cloud Console and get the custom generated ISO\n3. Download the ISO to a webserver and boot the servers from it.\n4. Wait for the hosts to show up in the Hybrid Cloud Console, check for validations errors and kick off the installation.\n","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Override":true},"Description":"Select the Server Profile Template you would like to use","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server Profile Template","Name":"SPT","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","Description","TargetPlatform"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/server/ProfileTemplates","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"ArrayItemType":{"ObjectType":"workflow.MoReferenceArrayItem","Properties":[{"DisplayAttributes":["Name","Model","Serial","ManagementMode","Firmware","MgmtIpAddress"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/compute/PhysicalSummaries","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Please select the servers you would like to deploy Openshift onto","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Servers","Max":16,"Min":3,"Name":"SERVERS","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"You can get your Token from https://console.redhat.com/openshift/token/show","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Redhat API Token","Name":"OFFLINE_TOKEN","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The name of the Openshift Cluster you want to create","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster name","Name":"CLUSTER_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":54,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-z-]?[a-z-0-9\\-\\.]+[a-z-]?$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The domain name that is used for the Openshift Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Base domain","Name":"DOMAIN_NAME","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":3,"ObjectType":"workflow.Constraints","Regex":"(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"4.11"},"Description":"The version of OpenShift you would like to install","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"OpenShift version","Name":"VERSION","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"4.12 - Developer Preview Release","ObjectType":"workflow.EnumEntry","Value":"4.12"},{"Label":"4.11","ObjectType":"workflow.EnumEntry","Value":"4.11"},{"Label":"4.10","ObjectType":"workflow.EnumEntry","Value":"4.10"},{"Label":"4.9","ObjectType":"workflow.EnumEntry","Value":"4.9"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Your public key that will be added to the hosts for the 'core' user","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SSH public key","Name":"SSH_PUB_KEY","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Additional NTP servers to use. Leave empty to use default RHCOS internet NTP servers","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NTP servers","Name":"NTP_SERVERS","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"enable this specify static IP, VLAN or bonding. Leave empty for DHCP","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Static IP","Name":"STATIC","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The VLAN ID to use. Leave empty for no VLAN configuration","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VLAN ID","Name":"VLAN_ID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":4096,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"MLOM"},"Description":"something like \"L\" or \"MLOM\"","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Adapter ID Name","Name":"AdapterID","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":["eth0"]},"Description":"When creating a bond please add multiple NIC's using the plus sign","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NIC name - add 2 or more to create a bond - not properly tested","Max":4,"Min":1,"Name":"NIC","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"active-backup"},"Description":"The mode in which you would like to bond the NICs. Please check here for more details https://docs.openshift.com/container-platform/4.9/networking/k8s_nmstate/k8s-nmstate-updating-node-network-config.html#virt-example-bond-nncp_k8s_nmstate-updating-node-network-config","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Link aggregation mode - only required for bonding","Name":"BOND_MODE","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"active-backup","ObjectType":"workflow.EnumEntry","Value":"active-backup"},{"Label":"balance-xor","ObjectType":"workflow.EnumEntry","Value":"balance-xor"},{"Label":"802.3ad - LACP","ObjectType":"workflow.EnumEntry","Value":"802.3ad"},{"Label":"balance-tlb","ObjectType":"workflow.EnumEntry","Value":"balance-tlb"},{"Label":"balance-alb","ObjectType":"workflow.EnumEntry","Value":"balance-alb"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Length of your network prefix. For example 24","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Network Prefix Length","Name":"PREFIX_LENGTH","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":32,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"DNS Server is used to get the hostnames of your hosts with a reverse IP lookup.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"DNS","Name":"DNS_SERVER","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Your gateway to Valhalla","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Gateway","Name":"GATEWAY","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of IP's to use for the OpenShift servers. Click the plus sign to add more.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IP Addresses","Max":16,"Min":1,"Name":"IPS","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The IP Address that will be assigned to the Kubernetes API","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"API IP Address","Name":"API_IP","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The IP Address that will be assigned to the ingress gateway","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Ingress IP Address","Name":"INGRESS_IP","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"10.128.0.0/14"},"Description":"The CIDR used for the POD network","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"POD CIDR","Name":"POD_CIDR","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"172.30.0.0/16"},"Description":"The CIDR used for the service network","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Service CIDR","Name":"SERVICE_CIDR","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Run virtual machines alongside containers on one platform. Additional Requirements      Enabled CPU virtualization support in BIOS (Intel-VT / AMD-V) on all nodes     Each worker node requires an additional 360 MiB of memory and 2 CPUs     Each control plane node requires an additional 150 MiB of memory and 4 CPUs     OpenShift Data Foundation (recommended for full functionality) or another persistent storage service","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Install OpenShift Virtualization","Name":"OSV","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Persistent software-defined storage for hybrid applications. ","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Install OpenShift Data Foundation","Name":"ODF","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"InputParameterSet":[{"Condition":"eq","ControlParameter":"STATIC","EnableParameters":["VLAN_ID","AdapterID","NIC","BOND_MODE","PREFIX_LENGTH","GATEWAY","DNS_SERVER","IPS"],"Name":"STATIC","ObjectType":"workflow.ParameterSet","Value":"true"}],"Label":"Provision Red Hat OpenShift bare metal cluster","Name":"ProvisionRedHatOpenShiftbaremetalCluster","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"OutputParameters":{},"Properties":{"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tags":[{"Key":"category","Value":"Compute"}],"Tasks":[{"Name":"StartTask","NextTask":"parallelLoop1","ObjectType":"workflow.StartTask"},{"Count":"{{ len .global.workflow.input.SERVERS}}","Description":"A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.","Label":"Boot Servers","LoopStartTask":"BootServerfromvMedia1","Name":"parallelLoop2","NumberOfBatches":1,"ObjectType":"workflow.LoopTask","OnSuccess":"InstallOpenShiftCluster1","Parallel":true},{"Count":"{{ len .global.workflow.input.SERVERS}}","Description":"A Parallel Loop is a control task that runs one task or one sub-workflow multiple times based on a specified count.  The count can be a static value that is specified during design time or a dynamic value that is derived from workflow inputs or task outputs.  When the loop is executed, the count 'N' is determined, N tasks or sub-workflows are scheduled for execution in parallel.  When all N instances of the task or sub-workflow reach a final state the parallel loop will complete and workflow execution will move on to the next task.  If any one of the tasks or sub-workflows fails, then the entire loop will fail.  Dynamic values for count must be specified as a template.  For example, if a loop must run for a count which matches the length of a workflow input called StringArray, then the count must be specified using a template '{{ len .global.workflow.input.StringArray }}'.  The iteration of the loop is available using the keyword '.iteration' and it can be used to control inputs that feed into the task.  For example, the task inside the loop needs to take one value from the workflow input StringArray, then the task string input can be mapped to the template '{{ index .global.workflow.input.StringArray .iteration}}' during design.","Label":"Deploy server profiles","LoopStartTask":"CreateandDeployServerProfile1","Name":"parallelLoop1","NumberOfBatches":1,"ObjectType":"workflow.LoopTask","OnSuccess":"GetMACAddress1","Parallel":true},{"CatalogMoid":"user","Description":"This Workflow will\n1. Create Red Hat and OpenShift Targets\n2. Create an OpenShift cluster in Red Hat's Hybrid Cloud Console and get the custom generated ISO","InputParameters":{"API_IP":"${workflow.input.API_IP}","BOND_MODE":"${workflow.input.BOND_MODE}","CLUSTER_NAME":"${workflow.input.CLUSTER_NAME}","DNS_SERVER":"${workflow.input.DNS_SERVER}","DOMAIN_NAME":"${workflow.input.DOMAIN_NAME}","GATEWAY":"${workflow.input.GATEWAY}","INGRESS_IP":"${workflow.input.INGRESS_IP}","IPS":"${workflow.input.IPS}","MAC_ADDRESS":"${GetMACAddress1.output.MAC_ADDRESS}","NIC":"${workflow.input.NIC}","NTP_SERVERS":"${workflow.input.NTP_SERVERS}","ODF":"${workflow.input.ODF}","OFFLINE_TOKEN":"${workflow.input.OFFLINE_TOKEN}","OSV":"${workflow.input.OSV}","POD_CIDR":"${workflow.input.POD_CIDR}","PREFIX_LENGTH":"${workflow.input.PREFIX_LENGTH}","SERVICE_CIDR":"${workflow.input.SERVICE_CIDR}","SSH_PUB_KEY":"${workflow.input.SSH_PUB_KEY}","STATIC":"${workflow.input.STATIC}","VERSION":"${workflow.input.VERSION}","VLAN_ID":"${workflow.input.VLAN_ID}"},"Label":"Create OpenShift Cluster","Name":"CreateOpenshiftBMCluster1","ObjectType":"workflow.SubWorkflowTask","OnFailure":"FailureEndTask","OnSuccess":"InvokeGenericWebApi1","Version":1,"WorkflowDefinitionName":"CreateOpenshiftBMCluster"},{"CatalogMoid":"user","InputParameters":{"OneTimeBootDevice":"CIMC-DVD","PowerState":"Power Cycle","Server":"{{index .global.workflow.input.SERVERS .iteration | ToJson }}"},"Label":"Boot Server from vMedia","Name":"BootServerfromvMedia1","ObjectType":"workflow.SubWorkflowTask","Version":1,"WorkflowDefinitionName":"BootServerfromvMedia"},{"CatalogMoid":"user","Description":"1. Create a new Server Profile from Template\n2. Set a server to the newly created Server Profile\n3. Deploy the Server Profile","InputParameters":{"NIC_NAME":"${workflow.input.NIC[0]}","SERVER":"{{index .global.workflow.input.SERVERS .iteration | ToJson }}","SPT":"${workflow.input.SPT}","SP_NAME":"{{.global.workflow.input.CLUSTER_NAME}}-{{.iteration}}"},"Label":"Create and Deploy Server Profile","Name":"CreateandDeployServerProfile1","ObjectType":"workflow.SubWorkflowTask","Version":1,"WorkflowDefinitionName":"CreateandDeployServerProfile"},{"CatalogMoid":"shared","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","InputParameters":{"Body":{"ContentType":"json","Text":"{ \n    \"clusterid\": \"{{.global.CreateOpenshiftBMCluster1.output.CLUSTER_ID}}\", \n    \"URL\": \"{{.global.CreateOpenshiftBMCluster1.output.ISO_URL}}\"\n}"},"ContentType":"json","Headers":{"Content-Type":"application/json"},"Method":"PUT","ResponseParser":{"Parameters":[{"Name":"FILE","Path":"$","Type":"string"}]},"Url":"/api"},"Label":"Download Discovery ISO","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"createVmediaPolicyAndAttachToServerProfiles1","TaskDefinitionName":"InvokeGenericWebApi","Version":2},{"CatalogMoid":"user","Description":"Create a Virtual Media Policy and attach it to your Server Profiles.\n\n1. Create Virtual Media Policy\n2. Attach the Policy to the Template\n3. Sync the Template with the Profiles","InputParameters":{"ClusterName":"${workflow.input.CLUSTER_NAME}","ISO":"${InvokeGenericWebApi1.output.Parameters.FILE}","SPT":"${workflow.input.SPT}"},"Label":"Create vMedia Policy and attach to Server Profile","Name":"createVmediaPolicyAndAttachToServerProfiles1","ObjectType":"workflow.SubWorkflowTask","OnFailure":"FailureEndTask","OnSuccess":"parallelLoop2","Version":1,"WorkflowDefinitionName":"createVmediaPolicyAndAttachToServerProfiles"},{"CatalogMoid":"user","Description":"This Workflow will\n1. Validate if your cluster is ready for install \n2. Start the OpenShift installation","InputParameters":{"CLUSTER_ID":"${CreateOpenshiftBMCluster1.output.CLUSTER_ID}","OFFLINE_TOKEN":"${workflow.input.OFFLINE_TOKEN}"},"Label":"Install OpenShift Cluster","Name":"InstallOpenShiftCluster1","ObjectType":"workflow.SubWorkflowTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","Version":1,"WorkflowDefinitionName":"InstallOpenShiftCluster"},{"CatalogMoid":"user","Description":"Get the MAC address for one or multiple servers for a specific NIC","InputParameters":{"AdapterID":"${workflow.input.AdapterID}","NIC_NAME":"${workflow.input.NIC[0]}"},"Label":"Get MAC Address","Name":"GetMACAddress1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"CreateOpenshiftBMCluster1","TaskDefinitionName":"GetMACAddress","Version":1},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":39.4999999999998,"Y":163},{"Name":"SuccessEndTask","X":802.4997342959239,"Y":546},{"Name":"FailureEndTask","X":447.6667552346926,"Y":553.1666666666666},{"Name":"parallelLoop1","X":-56.500000000000085,"Y":231},{"Name":"CreateandDeployServerProfile1","X":-46.500000000000085,"Y":322},{"Name":"CreateOpenshiftBMCluster1","X":342.5,"Y":234},{"Name":"InvokeGenericWebApi1","X":342.5002034836308,"Y":323},{"Name":"GetMACAddress1","X":-46.49998786450223,"Y":432},{"Name":"createVmediaPolicyAndAttachToServerProfiles1","X":342.5002034836308,"Y":426},{"Name":"parallelLoop2","X":707.5000000000001,"Y":225.83333333333337},{"Name":"BootServerfromvMedia1","X":717.5000000000001,"Y":316.83333333333337},{"Name":"InstallOpenShiftCluster1","X":717.499734295924,"Y":428}]},"VariableDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Value":"api.openshift.com"},"Description":"Relative URL for Intersight, Device Registration and Target APIs. Does not support specifying fully qualified URL.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"openshift_api","Name":"openshift_api","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"Batch":[{"Body":"{{- if index .global.task.input \"Body\" -}}\n  {{.global.task.input.Body.Text}}\n{{- end -}}","ContentType":"{{- if index .global.task.input \"ContentType\" -}}\n  {{.global.task.input.ContentType}}\n{{- else -}}json{{- end -}}","Cookies":"{{- if index .global.task.input \"Cookies\" -}}\n  {{.global.task.input.Cookies | ToJson}}\n{{- end -}}","EndpointRequestType":"Internal","Headers":"{{- if index .global.task.input \"Headers\" -}}\n  {{.global.task.input.Headers | ToJson}}\n{{- end -}}","Method":"{{- if index .global.task.input \"Method\" -}}\n  {{.global.task.input.Method}}\n{{- else -}}GET{{- end -}}","Name":"GenericBatchApiTask","ObjectType":"workflow.WebApi","Outcomes":"{{- if index .global.task.input \"Outcomes\" -}}\n  {{.global.task.input.Outcomes | ToJson}}\n{{- end -}}","ResponseSpec":"{{- if index .global.task.input \"ResponseParser\" -}}\n  {{.global.task.input.ResponseParser | ToJson}}\n{{- end -}}","TargetType":"{{- if index .global.task.input \"Target\" -}}\n  Endpoint\n{{- else -}}Local{{- end -}}","Url":"{{.global.task.input.Url}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Generic Batch API Task","Name":"GenericBatchApiTask","ObjectType":"workflow.BatchApiExecutor","Output":{"Cookies":"{{- if index .global.GenericBatchApiTask.output \"HttpCookies\" -}}\n  {{.global.GenericBatchApiTask.output.HttpCookies | ToJson}}\n{{- end -}}","Headers":"{{- if index .global.GenericBatchApiTask.output \"HttpHeaders\" -}}\n  {{.global.GenericBatchApiTask.output.HttpHeaders | ToJson}}\n{{- end -}}","Parameters":"{{.global.GenericBatchApiTask.output | ToJson}}","StatusCode":"{{- if index .global.GenericBatchApiTask.output \"HttpStatusCode\" -}}\n  {{.global.GenericBatchApiTask.output.HttpStatusCode}}\n{{- end -}}","StatusMessage":"{{- if index .global.GenericBatchApiTask.output \"HttpStatusMsg\" -}}\n  {{.global.GenericBatchApiTask.output.HttpStatusMsg}}\n{{- end -}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"InvokeGenericWebApi\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveTargetImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ContainsString .global.RemoveTargetImpl.output.HttpStatusMsg \"does not exist\")}}","Message":"Target does not exist, marking the task successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{(ne .global.RemoveTargetImpl.output.HttpStatusCode 200)}}","Message":"Failed to unclaim the target. Message: {{.global.RemoveTargetImpl.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Target unclaimed successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[],"Types":[]},"TargetType":"Local","Url":"/v1/asset/Targets/{{.global.task.input.Target.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove Target.","Name":"RemoveTargetImpl","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveTarget\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetApplianceDetailsImpl","ObjectType":"workflow.WebApi","Outcomes":[],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Secure":false,"Type":"collection"}],"Types":[]},"TargetType":"Local","Url":"/v1/asset/DeviceRegistrations?$filter=(PlatformType eq 'IntersightAppliance' and Tags.Key eq 'cisco.meta.intersightassist.type')&$select=Moid"},{"Body":"{\"Connections\":[{\"ManagementAddress\":\"{{.global.task.input.Host}}\"{{if index .global.task.input \"Port\"}},\"Port\":{{.global.task.input.Port}}{{end}}{{if index .global.task.input.ClaimTargetOptions \"HTTPAuth\"}}{{if eq .global.task.input.ClaimTargetOptions.HTTPAuth.AuthenticationSchemeOptions \"Basic\"}},\"Credential\":{\"Username\":\"{{.global.task.input.ClaimTargetOptions.HTTPAuth.BasicAuth.Username}}\",\"Password\":\"{{.global.task.input.ClaimTargetOptions.HTTPAuth.BasicAuth.Password}}\",\"ObjectType\":\"asset.UsernamePasswordCredential\"}{{else if eq .global.task.input.ClaimTargetOptions.HTTPAuth.AuthenticationSchemeOptions \"Bearer Token\"}},\"Credential\":{\"Token\":\"{{.global.task.input.ClaimTargetOptions.HTTPAuth.Token}}\",\"ObjectType\":\"asset.OauthBearerTokenCredential\"}{{end}}{{else if index .global.task.input.ClaimTargetOptions \"Auth\"}}, \"Credential\":{\"Username\":\"{{.global.task.input.ClaimTargetOptions.Auth.Username}}\",\"Password\":\"{{.global.task.input.ClaimTargetOptions.Auth.Password}}\",\"ObjectType\":\"asset.UsernamePasswordCredential\"}{{else if index .global.task.input.ClaimTargetOptions \"SAAuth\"}}{{if eq .global.task.input.ClaimTargetOptions.SAAuth.AuthenticationOptions \"Basic\"}},\"Credential\":{\"Username\":\"{{.global.task.input.ClaimTargetOptions.SAAuth.SABasicAuth.Username}}\",\"Password\":\"{{.global.task.input.ClaimTargetOptions.SAAuth.SABasicAuth.Password}}\",\"ObjectType\":\"asset.UsernamePasswordCredential\"}{{else if eq .global.task.input.ClaimTargetOptions.SAAuth.AuthenticationOptions \"Key Based\"}},\"Credential\":{\"Username\":\"{{.global.task.input.ClaimTargetOptions.SAAuth.SAKeyBasedAuth.Username}}\",\"PrivateKey\":\"{{.global.task.input.ClaimTargetOptions.SAAuth.SAKeyBasedAuth.PrivateKey}}\"{{ if index .global.task.input.ClaimTargetOptions.SAAuth.SAKeyBasedAuth \"Passphrase\" }},\"Passphrase\":\"{{.global.task.input.ClaimTargetOptions.SAAuth.SAKeyBasedAuth.Passphrase}}\"{{end}},\"ObjectType\":\"asset.PrivateKeyCredential\"}{{end}}{{else}},\"Credential\":{\"ObjectType\":\"asset.NoAuthenticationCredential\"}{{end}}{{if (or (eq .global.task.input.ClaimTargetOptions.TargetType \"SSHEndpoint\") (eq .global.task.input.ClaimTargetOptions.TargetType \"AnsibleEndpoint\") )}},\"ObjectType\":\"asset.SshConnection\"{{else}},\"ObjectType\":\"asset.HttpConnection\"{{if index .global.task.input.ClaimTargetOptions \"EnableHTTPSProtocol\"}},\"IsSecure\":{{.global.task.input.ClaimTargetOptions.EnableHTTPSProtocol}}{{end}}{{end}}}],\"TargetType\":\"{{.global.task.input.ClaimTargetOptions.TargetType}}\"{{if (lt (len .global.GetApplianceDetailsImpl.output.Results) 1)}}{{if index .global.task.input.ClaimTargetOptions \"ConnectViaAssist\"}}{{if .global.task.input.ClaimTargetOptions.ConnectViaAssist}},\"Assist\":{{.global.task.input.ClaimTargetOptions.Assist | ToJson}},\"ManagementLocation\":\"IntersightAssist\"{{else}},\"ManagementLocation\":\"Intersight\"{{end}}{{else if index .global.task.input.ClaimTargetOptions \"Assist\"}},\"Assist\":{{.global.task.input.ClaimTargetOptions.Assist | ToJson}},\"ManagementLocation\":\"IntersightAssist\"{{else}},\"ManagementLocation\":\"Intersight\"{{end}}{{else}},\"ManagementLocation\":\"Intersight\"{{end}}{{if index .global.task.input \"Name\"}},\"Name\":\"{{.global.task.input.Name}}\"{{end}}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewTargetImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(and (ne .global.NewTargetImpl.output.HttpStatusCode 200) (ContainsString .global.NewTargetImpl.output.HttpStatusMsg \"The value does not match any of the expected formats: Hostname,IPv4 Address,IPv6 Address\"))}}","Message":"Unable to claim the new target. Message: The value '{{.global.task.input.Host}}' does not match any of the expected formats: Hostname,IPv4 Address,IPv6 Address.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(ContainsString .global.NewTargetImpl.output.HttpStatusMsg \"already claimed\")}}","Message":"Target is already claimed, marking the task successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{(ne .global.NewTargetImpl.output.HttpStatusCode 200)}}","Message":"Unable to claim the new target. Message: {{.global.NewTargetImpl.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Target '{{.global.task.input.Name}}' claimed successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Moid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/asset/Targets"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetTargetDetailsImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if eq .global.GetTargetDetailsImpl.output.StatusErrorReason \"\"}}false {{else}} true {{end}}","Message":"Target status is '{{.global.GetTargetDetailsImpl.output.Status}}' with failure reason '{{.global.GetTargetDetailsImpl.output.StatusErrorReason}}'.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{if eq .global.GetTargetDetailsImpl.output.Status \"ClaimInProgress\"}} true {{end}}","Message":"Target status is '{{.global.GetTargetDetailsImpl.output.Status}}'.","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"true","Message":"Target ''{{.global.task.input.Name}}'' claimed successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Status","ObjectType":"content.Parameter","Path":"$.Results[0].Status","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"StatusErrorReason","ObjectType":"content.Parameter","Path":"$.Results[0].StatusErrorReason","Secure":false,"Type":"simple"}],"Types":[]},"StartDelay":10,"TargetType":"Local","Url":"/v1/asset/Targets?$filter=(TargetType eq '{{.global.task.input.ClaimTargetOptions.TargetType}}' and Connections.ManagementAddress eq '{{.global.task.input.Host}}')&$select=Moid,Status,StatusErrorReason"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"New Target.","Name":"NewTargetImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Target":"{{if index (index .global.GetTargetDetailsImpl.output.Results 0) \"Moid\"}}{\"Moid\": \"{{(index .global.GetTargetDetailsImpl.output.Results 0).Moid}}\",\"ObjectType\":\"asset.Target\"}{{end}}"},"RetryFromFailedApi":true,"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewTarget\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"grant_type=refresh_token&refresh_token={{.global.task.input.OFFLINE_TOKEN}}&client_id=cloud-services","ContentType":"json","Description":"Get's the Java Web Token from Red Hat","EndpointRequestType":"Internal","Headers":{"Accept":"application/json","Content-Type":"application/x-www-form-urlencoded"},"Label":"Get JWT","Method":"POST","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WebApi","Outcomes":[],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ACCESS_TOKEN","ObjectType":"content.Parameter","Path":"$.access_token","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Endpoint","Url":"/auth/realms/redhat-external/protocol/openid-connect/token"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Get's a JWT from Red Hat which you can use for 15 minutes","Name":"Get Red Hat JWT","ObjectType":"workflow.BatchApiExecutor","Output":{"ACCESS_TOKEN":"{{.global.InvokeGenericWebApi1.output.ACCESS_TOKEN}}","JWT":"{{.global.InvokeGenericWebApi1.output.ACCESS_TOKEN}}","JWT_TOKEN":"{{.global.InvokeGenericWebApi1.output.ACCESS_TOKEN}}"},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"GetRedHatJWT\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerOneTimeBootDevice\" and Version eq 2"},"Label":"SetStandaloneServerOneTimeBootDeviceImpl","Name":"SetStandaloneServerOneTimeBootDeviceImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode","PlatformType"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter='ManagementMode' eq 'IntersightStandalone'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Configures the chosen device as the one-time boot device for the FI Managed server. This device will be used when the server powers on the next time.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerOneTimeBootDevice\" and Version eq 2"},"Label":"SetFIManagedServerOneTimeBootDeviceImpl","Name":"SetFIManagedServerOneTimeBootDeviceImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode","PlatformType"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter='ManagementMode' eq 'IntersightStandalone'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerPowerState\" and Version eq 2"},"Label":"SetServerPowerStateImpl","Name":"SetServerPowerStateImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"ServerTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Desired Power State","Name":"PowerState","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Power On","ObjectType":"workflow.EnumEntry","Value":"Power On"},{"Label":"Power Off","ObjectType":"workflow.EnumEntry","Value":"Power Off"},{"Label":"Power Cycle","ObjectType":"workflow.EnumEntry","Value":"Power Cycle"},{"Label":"Hard Reset","ObjectType":"workflow.EnumEntry","Value":"Hard Reset"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Workflow Triggered","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Workflow Triggered","Name":"Workflow","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]}],"RetryCount":10,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetPolicyCountInProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetPolicyCountInProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.GetPolicyCountInProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq .global.GetPolicyCountInProfileApi.output.PolicyCount 0.0}}","Message":"No Policies attached in Profile.","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Policy count in profile fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"PolicyCount","ObjectType":"content.Parameter","Path":"$.Count","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/search/SearchItems?$filter=((IndexMotypes eq policy.AbstractPolicy) and (Profiles.Moid eq '{{.global.task.input.Profile.Moid}}'))&$count=true"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.GetProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if not .global.GetProfileApi.output.AssignedServerMoid}}true{{else}}false{{end}}","Message":"Server profile is not assigned to any server.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"true","Message":"Profile fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"RunningWorkflows","ObjectType":"content.Parameter","Path":"$.RunningWorkflows","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssignedServerMoid","ObjectType":"content.Parameter","Path":"$.AssignedServer.Moid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{.global.GetProfileApi.output.AssignedServerMoid}}'"},{"Body":"{\"Action\": \"Deploy\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"DeployServerProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.DeployServerProfileApi.output.HttpStatusCode 200}}","Message":"Deploy Server Profile failed with message: {{.global.DeployServerProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Deploy Server profile workflow triggered successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DeployRunningWfs","ObjectType":"content.Parameter","Path":"$.RunningWorkflows","Secure":false,"Type":"collection"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetProfile2Api","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetProfile2Api.output.HttpStatusCode 200}}","Message":"{{.global.GetProfile2Api.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq .global.GetProfile2Api.output.ConfigState \"Failed\"}}","Message":"Server profile deployment failed.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetProfile2Api.output.ConfigState \"Associated\"}}","Message":"Server profile deployed successfully.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ (eq (len .global.GetProfile2Api.output.RunningWorkflows)  (len .global.GetProfileApi.output.RunningWorkflows)) }}","Message":"Server profile deployment in progress.","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"true","Message":"Server profile deploy initiated successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"RunningWorkflows","ObjectType":"content.Parameter","Path":"$.RunningWorkflows","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConfigState","ObjectType":"content.Parameter","Path":"$.ConfigContext.ConfigState","Secure":false,"Type":"simple"}],"Types":[]},"StartDelay":30,"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Deploy Server profile.","Name":"DeployServerProfileImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Workflow":"{{index .global.GetProfile2Api.output.RunningWorkflows (len .global.GetProfileApi.output.RunningWorkflows)  | ToJson}}"},"RetryFromFailedApi":true,"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"DeployServerProfile\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","Description":"Get DeviceMoId","EndpointRequestType":"Internal","Label":"Get DeviceMoId","Method":"GET","Name":"getDeviceMoid","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DeviceMoId","ObjectType":"content.Parameter","Path":"$.DeviceMoId","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/compute/PhysicalSummaries/{{ .global.task.input.Server.Moid }}"},{"ContentType":"json","Description":"Get Server Profile from Server","EndpointRequestType":"Internal","Label":"Get Server Profile from Server","Method":"GET","Name":"getServerProfilefromServer","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileMoids","ObjectType":"content.Parameter","Path":"$.Results[*].ServerProfile.Moid","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/view/Servers?$filter=DeviceMoId eq '{{ .global.getDeviceMoid.output.DeviceMoId }}'"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Get the Profile which is associated with the server","Name":"Get Server Profile from Server","ObjectType":"workflow.BatchApiExecutor","Output":{"ServerProfileMoids":"{{.global.getServerProfilefromServer.output.ServerProfileMoids}}"},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"GetServerProfilefromServer\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetProfileApi.output.HttpStatusCode 404}}","Message":"Given profile does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.GetProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.GetProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}","Message":"Cannot delete the server profile {{.global.GetProfileApi.output.ProfileName}} while there is a server assigned to it.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssignedServerMoid","ObjectType":"content.Parameter","Path":"$.AssignedServer.Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ProfileName","ObjectType":"content.Parameter","Path":"$.Name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}?$select=Name,AssignedServer"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.RemoveProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.RemoveProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Profile {{.global.GetProfileApi.output.ProfileName}} deleted successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove Server profile","Name":"RemoveServerProfileImpl","ObjectType":"workflow.BatchApiExecutor","RetryFromFailedApi":true,"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveServerProfile\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetServerProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetServerProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.GetServerProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if not .global.GetServerProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}","Message":"Server profile is not assigned to any server.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"true","Message":"Profile fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssignedServerMoid","ObjectType":"content.Parameter","Path":"$.AssignedServer.Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ProfileName","ObjectType":"content.Parameter","Path":"$.Name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"},{"Body":"{\"Action\": \"Unassign\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UnassignProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.UnassignProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.UnassignProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{and (ne .global.UnassignProfileApi.output.ConfigState \"Not-assigned\") (ne .global.UnassignProfileApi.output.ConfigState \"UnConfiguring\")}}","Message":"Remove Server from server profile {{.global.GetServerProfileApi.output.ProfileName}} failed.","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Server unassigned from server profile {{.global.GetServerProfileApi.output.ProfileName}} successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConfigState","ObjectType":"content.Parameter","Path":"$.ConfigContext.ConfigState","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if not .global.GetServerProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}","TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove Server from Server profile.","Name":"RemoveServerFromServerProfileImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"ProfileStatus":"{{.global.UnassignProfileApi.output.ConfigState}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveServerFromServerProfile\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}","Message":"Required input 'Server' is not found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetServerProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetServerProfileApi.output.HttpStatusCode 200}}","Message":"{{.global.GetServerProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if and (.global.GetServerProfileApi.output.AssignedServerMoid) (ne .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid)}} true {{else}} false {{end}}","Message":"Another Server is already assigned to the Profile {{.global.GetServerProfileApi.output.ProfileName}}. Please unassign it to assign given Server.","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}","Message":"Given Server is already assigned to the Profile {{.global.GetServerProfileApi.output.ProfileName}}.","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Profile {{.global.GetServerProfileApi.output.ProfileName}} fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssignedServerMoid","ObjectType":"content.Parameter","Path":"$.AssignedServer.Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ProfileName","ObjectType":"content.Parameter","Path":"$.Name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"QueryRackUnitServerMo","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.QueryRackUnitServerMo.output.HttpStatusCode 200)}}","Message":"{{.global.QueryRackUnitServerMo.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"RuObjecttype","ObjectType":"content.Parameter","Path":"$.Results[0].ObjectType","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}","TargetType":"Local","Url":"/v1/compute/RackUnits?$filter=Moid eq '{{.global.task.input.Server.Moid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"QueryBladeServerMo","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.QueryBladeServerMo.output.HttpStatusCode 200)}}","Message":"{{.global.QueryBladeServerMo.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{$rackunit := (lt (len .global.QueryRackUnitServerMo.output.Results)  1)}}{{$blade := (lt (len .global.QueryBladeServerMo.output.Results)  1)}}{{(and $rackunit $blade)}}","Message":"Invalid server: RackUnit or Blade with Moid '{{.global.task.input.Server.Moid}}' does not exist","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Server Moid {{.global.task.input.Server.Moid}} found successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BladeObjecttype","ObjectType":"content.Parameter","Path":"$.Results[0].ObjectType","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}","TargetType":"Local","Url":"/v1/compute/Blades?$filter=Moid eq '{{.global.task.input.Server.Moid}}'"},{"Body":"{\"AssignedServer\": { {{if .global.QueryRackUnitServerMo.output.RuObjecttype}}\"ObjectType\":\"compute.RackUnit\" {{else if .global.QueryBladeServerMo.output.BladeObjecttype}} \"ObjectType\":\"compute.Blade\" {{end}},\"Moid\":\"{{.global.task.input.Server.Moid}}\"}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"AssignServerToProfileApi","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.AssignServerToProfileApi.output.HttpStatusCode 200}}","Message":"Set Server to Profile {{.global.GetServerProfileApi.output.ProfileName}} failed with message: {{.global.AssignServerToProfileApi.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ne .global.AssignServerToProfileApi.output.ConfigState \"Assigned\"}}","Message":"Set server to Server Profile {{.global.GetServerProfileApi.output.ProfileName}} failed.","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Server assigned to profile {{.global.GetServerProfileApi.output.ProfileName}} successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConfigState","ObjectType":"content.Parameter","Path":"$.ConfigContext.ConfigState","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}","TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetServerProfile2Api","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetServerProfile2Api.output.HttpStatusCode 200}}","Message":"{{.global.GetServerProfile2Api.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConfigState","ObjectType":"content.Parameter","Path":"$.ConfigContext.ConfigState","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Assign Server to Server profile.","Name":"SetServerToServerProfileImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"ProfileStatus":"{{.global.GetServerProfile2Api.output.ConfigState}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerToServerProfile\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{\n  \"Name\": \"{{ .global.task.input.Name }}\",\n  \"Enabled\": true,\n  \"Encryption\": true,\n  \"LowPowerUsb\": true,\n  \"Mappings\": [\n      {\n          \"VolumeName\": \"{{ .global.task.input.VolumeName }}\",\n          \"DeviceType\": \"cdd\",\n          \"MountProtocol\": \"{{ .global.task.input.Protocol }}\",\n          \"FileLocation\": \"{{ .global.task.input.URL }}\"\n      }\n  ]\n}","ContentType":"json","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","EndpointRequestType":"Internal","Label":"Create Virtual Media Policy","Method":"POST","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Moid","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/vmedia/Policies"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Create a Virtual Media Policy that will mount an HTTP(s) URL on the CIMC","Name":"Create HTTP Virtual Media Policy","ObjectType":"workflow.BatchApiExecutor","Output":{"Moid":"{{.global.InvokeGenericWebApi1.output.Moid}}"},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"CreateHTTPVirtualMediaPolicy\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","Description":"This will get all Server Profiles","EndpointRequestType":"Internal","Label":"Get all Server Profiles","Method":"GET","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WebApi","Outcomes":[],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileMoids","ObjectType":"content.Parameter","Path":"$.Results[*].Moid","Secure":false,"Type":"json"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/server/Profiles?$filter=SrcTemplate.Moid eq '{{ .global.task.input.SPT.Moid }}'&$inlinecount=allpages&$top=1000"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Get Profiles attached to a Template","Name":"Get Server Profiles attached to Template","ObjectType":"workflow.BatchApiExecutor","Output":{"ServerProfileMoids":"{{.global.InvokeGenericWebApi1.output.ServerProfileMoids}}"},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"GetServerProfilesattachedtoTemplate\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"SrcTemplate\" : null }","ContentType":"json","Description":"Server Profile needs to be detached from Template in order to add a Policy","EndpointRequestType":"Internal","Label":"Detach Server Profile","Method":"PATCH","Name":"InvokeGenericWebApi3","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[],"Types":[]},"TargetType":"Local","Url":"/api/v1/server/Profiles/{{ .global.task.input.SP }}"},{"Body":"[\n  {\n    \"Moid\": \"{{ .global.task.input.PolicyMoId }}\",\n    \"ObjectType\": \"{{ .global.task.input.PolicyType }}\"\n  }\n]\n","ContentType":"json","Description":"Add Policy to Server Profile ","EndpointRequestType":"Internal","Label":"Add Policy to Server Profile ","Method":"POST","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"RESPONSE","ObjectType":"content.Parameter","Path":"$","Secure":false,"Type":"json"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/server/Profiles/{{ .global.task.input.SP }}/PolicyBucket"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"This task will add your Policy to a Server Profile Template Policy Bucket and will do it for all the attached profiles","Name":"Add Policy to Server Profile","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"AddPolicytoServerProfile\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","EndpointRequestType":"Internal","Label":"Get Server Device MOID","Method":"GET","Name":"InvokeGenericWebApi2","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DeviceMoId","ObjectType":"content.Parameter","Path":"$.Results[*].DeviceMoId","Secure":false,"Type":"json"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/compute/PhysicalSummaries?$filter=\n{{- range $index, $server := .global.task.input.SERVERS -}}\n{{if $index }} OR {{end -}}\nMoid eq '{{$server.Moid}}' {{- end}}"},{"ContentType":"json","Description":"Get Adapter Moid","EndpointRequestType":"Internal","Label":"Get Adapter","Method":"GET","Name":"InvokeGenericWebApi3","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AdapterUnit","ObjectType":"content.Parameter","Path":"$.Results[*].Moid","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/adapter/Units?$filter=AdapterId eq '{{.global.task.input.AdapterID}}' AND DeviceMoId in ({{ range $index, $server := .global.InvokeGenericWebApi2.output.DeviceMoId -}}{{- if $index}},{{end -}}'{{$server}}'{{- end}})"},{"ContentType":"json","Description":"Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n","EndpointRequestType":"Internal","Label":"Get MAC Address","Method":"GET","Name":"InvokeGenericWebApi1","ObjectType":"workflow.WebApi","Outcomes":[],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MAC_ADDRESS","ObjectType":"content.Parameter","Path":"$.Results[*].MacAddress","Secure":false,"Type":"string"}],"Types":[]},"TargetType":"Local","Url":"/api/v1/adapter/HostEthInterfaces?$filter=Name eq '{{.global.task.input.NIC_NAME}}' AND AdapterUnit.Moid in ({{ range $index, $adapter := .global.InvokeGenericWebApi3.output.AdapterUnit -}}{{- if $index}},{{end -}}'{{$adapter}}'{{- end}})"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Get the MAC address for one or multiple servers for a specific NIC","Name":"Get MAC Address","ObjectType":"workflow.BatchApiExecutor","Output":{"MAC_ADDRESS":"{{.global.InvokeGenericWebApi1.output.MAC_ADDRESS}}"},"SharedScope":"user","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"GetMACAddress\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}","Message":"Required input 'Server' is not found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"CheckServerStandalone","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.CheckServerStandalone.output.HttpStatusCode 200}}","Message":"{{.global.CheckServerStandalone.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.CheckServerStandalone.output.ServerMoid) 0}}","Error":true,"Message":"Server with moid {{.global.task.input.Server.Moid}} does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.CheckServerStandalone.output.ServerManagementMode \"IntersightStandalone\"}}","Message":"Server with moid {{.global.task.input.Server.Moid}} is not a Standalone Server","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerManagementMode","ObjectType":"content.Parameter","Path":"$.Results[0].ManagementMode","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$filter='Moid' eq '{{.global.task.input.Server.Moid}}'"},{"Body":"<configConfMo dn=\"sys/rack-unit-1/one-time-precision-boot\" inHierarchical=\"true\"> <inConfig> <oneTimePrecisionBootDevice  {{if not .global.task.input.OneTimeBootDevice}} adminAction=\"clear-one-time-boot-device\" {{else}} device=\"{{.global.task.input.OneTimeBootDevice}}\" {{end}} rebootOnUpdate=\"No\"/> </inConfig> </configConfMo>","ContentType":"xml","Name":"SetOneTimeBoot","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{ne (len .global.SetOneTimeBoot.output.ErrorMsg) 0}}","Message":"{{.global.SetOneTimeBoot.output.ErrorMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ne (len .global.SetOneTimeBoot.output.Error) 0}}","Message":"{{.global.SetOneTimeBoot.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{not .global.task.input.OneTimeBootDevice}}","Message":"One-Time Boot device configuration has been cleared","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"One-Time Boot device is configured to '{{.global.task.input.OneTimeBootDevice}}'","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorMsg","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"//configConfMo/@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[],"Types":[]}}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"IntersightStandalone"}},"Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time.","Name":"SetStandaloneServerOneTimeBootDeviceImpl","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetStandaloneServerOneTimeBootDeviceImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetServerProfile","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetServerProfile.output.HttpStatusCode 200}}","Message":"{{.global.GetServerProfile.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetServerProfile.output.ServerProfileMoid) 0}}","Message":"Server with moid {{.global.task.input.Server.Moid}} does not have a Server Profile Deployed.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileName","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles?$filter='AssociatedServer.Moid' eq '{{.global.task.input.Server.Moid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetBootPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetBootPolicy.output.HttpStatusCode 200}}","Message":"{{.global.GetBootPolicy.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetBootPolicy.output.BootPolicyMoid) 0}}","Message":"Server with moid {{.global.task.input.Server.Moid}} does not have a Boot Policy Deployed.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq (len .global.GetBootPolicy.output.BootDevices) 0}}","Message":"One Time Boot device '{{.global.task.input.OneTimeBootDevice}}' is not valid, as it is not configured under Boot Policy.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootPolicyMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootMode","ObjectType":"content.Parameter","Path":"$.Results[0].ConfiguredBootMode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SecureBoot","ObjectType":"content.Parameter","Path":"$.Results[0].EnforceUefiSecureBoot","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootPolicyName","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"BootDevice","ItemType":"complex","Name":"BootDevices","ObjectType":"content.Parameter","Path":"$.Results[0].BootDevices[?(@.Name == \"{{.global.task.input.OneTimeBootDevice}}\")]","Secure":false,"Type":"collection"}],"Types":[{"Name":"BootDevice","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ObjectType","ObjectType":"content.Parameter","Path":"$.ObjectType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CiscoVIC","ObjectType":"content.Parameter","Path":"$.CiscoVIC","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"PciSlotId","ObjectType":"content.Parameter","Path":"$.PciSlotId","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MACAddress","ObjectType":"content.Parameter","Path":"$.MACAddress","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Wwpn","ObjectType":"content.Parameter","Path":"$.Wwpn","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Lun","ObjectType":"content.Parameter","Path":"$.Lun","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Subtype","ObjectType":"content.Parameter","Path":"$.Subtype","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceName","ObjectType":"content.Parameter","Path":"$.InterfaceName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"IpType","ObjectType":"content.Parameter","Path":"$.IpType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"BootLoader","ItemType":"complex","Name":"BootLoader","ObjectType":"content.Parameter","Path":"$.Bootloader","Secure":false,"Type":"simple"}]},{"Name":"BootLoader","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Path","ObjectType":"content.Parameter","Path":"$.Path","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Description","ObjectType":"content.Parameter","Path":"$.Description","Secure":false,"Type":"simple"}]}]},"TargetType":"Local","Url":"/v1/boot/PrecisionPolicies?$filter='Profiles.Moid' eq '{{.global.GetServerProfile.output.ServerProfileMoid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetAdapterHostEthInterface","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetAdapterHostEthInterface.output.HttpStatusCode 200}}","Message":"{{.global.GetAdapterHostEthInterface.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetAdapterHostEthInterface.output.AdapterMoid) 0}}","Message":"Error retrieving parameters for Interface Name = {{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}} specified in PXE Boot.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AdapterMoid","ObjectType":"content.Parameter","Path":"$.Results[0].AdapterUnit.Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MacAddress","ObjectType":"content.Parameter","Path":"$.Results[0].MacAddress","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne (index .global.GetBootPolicy.output.BootDevices 0).ObjectType \"boot.Pxe\"}}","TargetType":"Local","Url":"/v1/adapter/HostEthInterfaces?$filter='Name' eq '{{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}}' and 'Ancestors.Moid' eq '{{.global.task.input.Server.Moid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetAdapterHostFcInterface","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetAdapterHostFcInterface.output.HttpStatusCode 200}}","Message":"{{.global.GetAdapterHostFcInterface.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetAdapterHostFcInterface.output.AdapterMoid) 0}}","Message":"Error retrieving parameters for Interface Name = {{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}} specified in SAN Boot.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AdapterMoid","ObjectType":"content.Parameter","Path":"$.Results[0].AdapterUnit.Moid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Wwpn","ObjectType":"content.Parameter","Path":"$.Results[0].Wwpn","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne (index .global.GetBootPolicy.output.BootDevices 0).ObjectType \"boot.San\"}}","TargetType":"Local","Url":"/v1/adapter/HostFcInterfaces?$filter='Name' eq '{{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}}' and 'Ancestors.Moid' eq '{{.global.task.input.Server.Moid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetAdapterUnit","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetAdapterUnit.output.HttpStatusCode 200}}","Message":"{{.global.GetAdapterUnit.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetAdapterUnit.output.PciSlot) 0}}","Message":"Error retrieving parameters for Interface Name = {{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}} specified in One Time Boot.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"PciSlot","ObjectType":"content.Parameter","Path":"$.Results[0].PciSlot","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{not (or (eq (index .global.GetBootPolicy.output.BootDevices 0).ObjectType `boot.San`) (eq (index .global.GetBootPolicy.output.BootDevices 0).ObjectType `boot.Pxe` )) }}","TargetType":"Local","Url":"/v1/adapter/Units?$filter='Moid' eq '{{if eq (index .global.GetBootPolicy.output.BootDevices 0).ObjectType `boot.San`}}{{.global.GetAdapterHostFcInterface.output.AdapterMoid}}{{else if eq (index .global.GetBootPolicy.output.BootDevices 0).ObjectType `boot.Pxe`}}{{.global.GetAdapterHostEthInterface.output.AdapterMoid}}{{end}}'"},{"Body":"{{$device:=(index .global.GetBootPolicy.output.BootDevices 0)}} {{$inputDevice:=.global.task.input.OneTimeBootDevice}} {\"FlexBootOrder\":{\"FlexBootOrderHeader\":{ {{if eq .global.GetBootPolicy.output.BootMode \"Uefi\"}}\"BootMode\":\"uefi\"{{else}}\"BootMode\":\"legacy\"{{end}}, {{if eq .global.GetBootPolicy.output.SecureBoot true}}\"SecureBoot\":\"enabled\"{{else}}\"SecureBoot\":\"disabled\"{{end}}, \"BootPolicyName\":\"{{.global.GetBootPolicy.output.BootPolicyName}}\",\"ServiceProfile\":\"{{.global.GetServerProfile.output.ServerProfileName}}\",\"Version\":\"2.0\"}, {{if eq $device.Name $inputDevice}} {{if eq $device.ObjectType \"boot.UefiShell\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"UefiShell\",\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.LocalCdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"LocalCDD\",\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.LocalDisk\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"LocalHDD\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":{{($bootLoaderName | ToJson)}},{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":{{($bootLoaderPath | ToJson)}},{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":{{($deviceName | ToJson)}},{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Usb\"}} {{if eq $device.Subtype \"usb-cd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"USB\",\"SubType\":\"CD\", BootOrder\":1}]}} {{else if eq $device.Subtype \"usb-fdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"USB\",\"SubType\":\"FDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"usb-hdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"USB\",\"SubType\":\"HDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"None\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"USB\",\"SubType\":\"Any\",\"BootOrder\":1}]}} {{end}} {{else if eq $device.ObjectType \"boot.VirtualMedia\"}} {{if eq $device.Subtype \"cimc-mapped-dvd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"CIMCVMediaCDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"cimc-mapped-hdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"CIMCVMediaHDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"kvm-mapped-dvd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaCDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"kvm-mapped-hdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaHDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"kvm-mapped-fdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaFDD\",\"BootOrder\":1}]}} {{else if eq $device.Subtype \"None\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"VirtualMedia\",\"SubType\": \"Any\",\"BootOrder\":1}]}} {{end}} {{else if eq $device.ObjectType \"boot.SdCard\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"SDCard\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":{{($bootLoaderName | ToJson)}},{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":{{($bootLoaderPath | ToJson)}},{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":{{($deviceName | ToJson)}},{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.PchStorage\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"PCH\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":{{($bootLoaderName | ToJson)}},{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":{{($bootLoaderPath | ToJson)}},{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":{{($deviceName | ToJson)}},{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Nvme\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"NVME\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":{{($bootLoaderName | ToJson)}},{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":{{($bootLoaderPath | ToJson)}},{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":{{($deviceName | ToJson)}},{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.San\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"CiscoVIC\": \"Yes\",\"FlexBootTarget\":\"SAN\",\"PciSlotId\":\"{{.global.GetAdapterUnit.output.PciSlot}}\",\"WWPN\":\"{{.global.GetAdapterHostFcInterface.output.Wwpn}}\",\"LunId\":\"{{$device.Lun}}\",\"TargetWWPN\":\"{{$device.Wwpn}}\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":{{($bootLoaderName | ToJson)}},{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":{{($bootLoaderPath | ToJson)}},{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":{{($deviceName | ToJson)}},{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Pxe\"}} {{$IpType:=$device.IpType}} \"FlexBootTargets\":[{\"CiscoVIC\": \"Yes\",\"FlexBootTarget\":\"LAN\",{{if (or (eq $device.IpType \"IPv4\") (eq $device.IpType \"IPv6\"))}}\"IpType\":\"{{$device.IpType}}\",{{end}}\"PciSlotId\":\"{{.global.GetAdapterUnit.output.PciSlot}}\",\"MACAddress\":\"{{.global.GetAdapterHostEthInterface.output.MacAddress}}\",\"BootOrder\":1}]}} {{end}} {{end}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"SetOneTimeBoot","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.SetOneTimeBoot.output.HttpStatusCode 200}}","Message":"{{.global.SetOneTimeBoot.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"One-Time Boot device is configured to {{.global.task.input.OneTimeBootDevice}}","ObjectType":"workflow.Outcome"}],"Protocol":"https","TargetType":"Endpoint","Url":"http://127.0.0.1:444/cisco/blob/Intersight2BiosOneTimeBootOrder"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"Intersight"}},"Description":"Configures the chosen device as the one-time boot device for the FI Managed server. This device will be used when the server powers on the next time.","Name":"SetFIManagedServerOneTimeBootDeviceImpl","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"shared","SkipOnCondition":"{{not .global.task.input.OneTimeBootDevice}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetFIManagedServerOneTimeBootDeviceImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}","Message":"Required input 'Server' is not found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"QueryServerSettingMo","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.QueryServerSettingMo.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.QueryServerSettingMo.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"{{ (lt (len .global.QueryServerSettingMo.output.Results)  1) }}","Error":true,"Message":"Could not find ServerSettings for the Server Moid {{.global.task.input.Server.Moid}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"ServerSettings for Server Moid {{.global.task.input.Server.Moid}} found successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/ServerSettings?$filter=Server.Moid eq '{{.global.task.input.Server.Moid}}'"},{"Body":"{ {{if eq .global.task.input.PowerState \"Power On\"}}\"AdminPowerState\":\"PowerOn\" {{else if eq .global.task.input.PowerState \"Power Off\"}} \"AdminPowerState\":\"PowerOff\" {{else if eq .global.task.input.PowerState \"Power Cycle\"}} \"AdminPowerState\":\"PowerCycle\" {{else if eq .global.task.input.PowerState \"Hard Reset\"}} \"AdminPowerState\":\"HardReset\" {{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"SetState","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.SetState.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.SetState.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power Off\")}}","Message":"Server Powered off successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power On\")}}","Message":"Server Powered on successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power Cycle\")}}","Message":"Server Power cycled successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Hard Reset\")}}","Message":"Server Hard Reset successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"MoRef","ItemType":"simple","Name":"Workflow","ObjectType":"content.Parameter","Path":"$.RunningWorkflow","Secure":false,"Type":"complex"}],"Types":[{"Name":"MoRef","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ObjectType","ObjectType":"content.Parameter","Path":"$.ObjectType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Moid","Secure":false,"Type":"simple"}]}]},"TargetType":"Local","Url":"/v1/compute/ServerSettings/{{.global.QueryServerSettingMo.output.Moid}}"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","Name":"SetServerPowerStateImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Workflow":"{{.global.SetState.output.Workflow  | ToJson}}"},"RetryFromFailedApi":true,"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerPowerStateImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"}]